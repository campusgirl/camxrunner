--- PA/wrtipr.f	Sat Dec 10 22:49:33 2011
+++ PA/wrtipr.f	Tue Mar 27 20:56:29 2012
@@ -1,98 +1,102 @@
-      subroutine wrtipr(iendat,endtim)
-      use filunit
-      use chmstry
-      use procan
-c
-c----CAMx v5.30 101223
-c
-c     This routine writes to the output file for the Integrated Process
-c     Rate (IPR) data for the Process Analysis algorithm.  Each record 
-c     contains the all of the data for once cell and species for the 
-c     specified time period.
-c
-c     Copyright 1996 - 2010
-c     ENVIRON International Corporation
-c
-c     Modifications:
-c        none
-c
-c     Input arguments:
-c        endtim     ending time for this period
-c        iendat     ending date for this period
-c
-c     Subroutines Called:
-c
-c
-c     Called by:
-c        CAMx
-c
-      include "camx.prm"
-c
-c-----Argument declarations
-c
-      integer iendat
-      real    endtim 
-c
-c-----Local variables
-c
-c
-c-----Entry point
-c
-c
-c  --- loop over the species that should br written to output file
-c      (as defines by regular model average species list)
-c
-      do l=1,navspc
-        ispc = lavmap(l)
-c
-c  --- loop over the number of sub-domain cells ---
-c
-        do icel=1,npa_cels
-c
-c  --- calculate the average volume of cell,
-c      and re-initialize the counter ---
-c
-           if( npastep(icel,ispc) .GT. 0 ) then
-              cipr(IPR_VOL,icel,ispc) = cipr(IPR_VOL,icel,ispc) / 
-     &                                          npastep(icel,ispc)
-           else
-              cipr(IPR_VOL,icel,ispc) = 0.0
-           endif
-c
-c  --- write out the record for this cell ---
-c
-           write(ipr_unit,ERR=7000) iendat, endtim, 
-     &                    spname(ispc), ipadom(icel), ipanst(icel),
-     &                           ipax(icel), ipay(icel), ipaz(icel),
-     &                                 (cipr(i,icel,ispc),i=1,NPAPRC)
-c
-c  --- next subdomain cell ---
-c
-        enddo
-c
-c  --- next species
-c
-      enddo
-c
-c  --- re-initialize counters to zero ---
-c
-      do icel=1,npa_cels
-         do ispc=1,nspec
-           npastep(icel,ispc) = 0
-         enddo
-      enddo
-      goto 9999
-c
-c----Error messages
-c
- 7000 continue
-      write(iout,'(//,a)') 'ERROR in WRTIPR:'
-      write(iout,'(1X,2A)',ERR=9999) 'Writing data to the output ',
-     &                         'Integrated Process Rate (.ipr) file.'
-      write(iout,'(10X,A,I8.5,5X,A,F8.1)') 
-     &      'Date: ',iendat,'Time: ',endtim
-      call camxerr()
-c
- 9999 continue
-      return
-      end
+      subroutine wrtipr(iendat,endtim)
+      use filunit
+      use chmstry
+      use procan
+c
+c----CAMx v5.40 111010
+c
+c     This routine writes to the output file for the Integrated Process
+c     Rate (IPR) data for the Process Analysis algorithm.  Each record 
+c     contains the all of the data for once cell and species for the 
+c     specified time period.
+c
+c     Copyright 1996 - 2010
+c     ENVIRON International Corporation
+c
+c     Modifications:
+c        none
+c
+c     Input arguments:
+c        endtim     ending time for this period
+c        iendat     ending date for this period
+c
+c     Subroutines Called:
+c
+c
+c     Called by:
+c        CAMx
+c
+      include "camx.prm"
+c
+c-----Argument declarations
+c
+      integer iendat
+      real    endtim 
+c
+c-----Local variables
+c
+c
+c-----Entry point
+c
+c
+c  --- loop over the species that should br written to output file
+c      (as defines by regular model average species list)
+c
+      do 10 l=1,navspc
+        ispc = lavmap(l)
+c
+c  --- skip the radical species ---
+c
+        if( ispc .LE. nrad ) goto 10
+c
+c  --- loop over the number of sub-domain cells ---
+c
+        do icel=1,npa_cels
+c
+c  --- calculate the average volume of cell,
+c      and re-initialize the counter ---
+c
+           if( npastep(icel,ispc) .GT. 0 ) then
+              cipr(IPR_VOL,icel,ispc) = cipr(IPR_VOL,icel,ispc) / 
+     &                                          npastep(icel,ispc)
+           else
+              cipr(IPR_VOL,icel,ispc) = 0.0
+           endif
+c
+c  --- write out the record for this cell ---
+c
+           write(ipr_unit,ERR=7000) iendat, endtim, 
+     &                    spname(ispc), ipadom(icel), ipanst(icel),
+     &                           ipax(icel), ipay(icel), ipaz(icel),
+     &                                 (cipr(i,icel,ispc),i=1,NPAPRC)
+c
+c  --- next subdomain cell ---
+c
+        enddo
+c
+c  --- next species
+c
+   10 continue
+c
+c  --- re-initialize counters to zero ---
+c
+      do icel=1,npa_cels
+         do ispc=1,nspec
+           npastep(icel,ispc) = 0
+         enddo
+      enddo
+      goto 9999
+c
+c----Error messages
+c
+ 7000 continue
+      write(iout,'(//,a)') 'ERROR in WRTIPR:'
+      write(iout,'(1X,2A)',ERR=9999) 'Writing data to the output ',
+     &                         'Integrated Process Rate (.ipr) file.'
+      write(iout,'(10X,A,I8.5,5X,A,F8.1)') 
+     &      'Date: ',iendat,'Time: ',endtim
+      call camxerr()
+c
+ 9999 continue
+      return
+      end
--- PA/wrtiprhdr.f	Sat Dec 10 22:49:33 2011
+++ PA/wrtiprhdr.f	Mon Mar 26 23:16:28 2012
@@ -1,129 +1,141 @@
-      subroutine wrtiprhdr(ibgdat,btime,iendat,etime)
-      use filunit
-      use grid
-      use chmstry
-      use camxcom
-      use procan
-c
-c----CAMx v5.30 101223
-c
-c     This routine writes the header to the output file for the Integrated
-c     Process Rates (IPR) data for the Process Analysis algorithm.  The header 
-c     data is designed to provide information about what data is contained
-c     in the rest of the file.
-c
-c     Copyright 1996 - 2010
-c     ENVIRON International Corporation
-c
-c     Modifications:
-c        11/06/01  Input dates are now Julian
-c
-c     Input arguments:
-c        btime      ending time for this period
-c        ibgdat     ending date for this period (YYJJJ)
-c        etime      ending time for this period
-c        iendat     ending date for this period (YYJJJ)
-c
-c     Subroutines Called:
-c
-c
-c     Called by:
-c        STARTUP
-c
-      include "camx.prm"
-c
-c-----Argument declarations
-c
-      integer ibgdat
-      real    btime 
-      integer iendat
-      real    etime 
-c
-c-----Local variables
-c
-      character*25 prcnam(NPAPRC)
-c
-c-----Entry point
-c
-c  --- load process names into local array ---
-c
-       prcnam(IPR_INIT)    = 'Initial concentration    '
-       prcnam(IPR_CHEM)    = 'Gas-phase chemistry      '
-       prcnam(IPR_AEMIS)   = 'Area emissions           '
-       prcnam(IPR_PTEMIS)  = 'Point source emissions   '
-       prcnam(IPR_PIGEMIS) = 'Plume-in-Grid change     '
-       prcnam(IPR_WADV)    = 'West boundary advection  '
-       prcnam(IPR_EADV)    = 'East boundary advection  '
-       prcnam(IPR_SADV)    = 'South boundary advection '
-       prcnam(IPR_NADV)    = 'North boundary advection '
-       prcnam(IPR_BADV)    = 'Bottom boundary advection'
-       prcnam(IPR_TADV)    = 'Top boundary advection   '
-       prcnam(IPR_DADV)    = 'Dilution in the vertical '
-       prcnam(IPR_WDIF)    = 'West boundary diffusion  '
-       prcnam(IPR_EDIF)    = 'East boundary diffusion  '
-       prcnam(IPR_SDIF)    = 'South boundary diffusion '
-       prcnam(IPR_NDIF)    = 'North boundary diffusion '
-       prcnam(IPR_BDIF)    = 'Bottom boundary diffusion'
-       prcnam(IPR_TDIF)    = 'Top boundary diffusion   '
-       prcnam(IPR_DDEP)    = 'Dry deposition           '
-       prcnam(IPR_WDEP)    = 'Wet deposition           '
-       prcnam(IPR_IAERO)   = 'Inorganic aerosol chem   '
-       prcnam(IPR_OAERO)   = 'Organic aerosol chem     '
-       prcnam(IPR_AQCHEM)  = 'Aqueous chemistry        '
-       prcnam(IPR_FINAL)   = 'Final concentration      '
-       prcnam(IPR_CONV)    = 'Units conversion         '
-       prcnam(IPR_VOL)     = 'Average cell volume      '
-c
-c --- write the date and time of the simulation ---
-c
-      write(ipr_unit,ERR=7000) runmsg
-      write(ipr_unit,ERR=7000) ibgdat, btime, iendat, etime 
-c
-c --- write the information about the grids ---
-c
-      write(ipr_unit,ERR=7000) ngrid
-      write(ipr_unit,ERR=7000) xorg, yorg, ncol(1), nrow(1), delx, dely
-      do igrd=2,ngrid
-        xsize = delx / FLOAT( meshold(igrd) )
-        ysize = dely / FLOAT( meshold(igrd) )
-        orgx = (inst1(igrd)-1)*delx + xorg - xsize
-        orgy = (jnst1(igrd)-1)*dely + yorg - ysize
-        write(ipr_unit,ERR=7000) orgx, orgy, ncol(igrd), nrow(igrd), 
-     &                                                    xsize, ysize
-      enddo
-c
-c --- write the species output to file ---
-c
-      write(ipr_unit,ERR=7000) navspc
-      do ispc=1,navspc
-         write(ipr_unit,ERR=7000) spname(lavmap(ispc))
-      enddo
-c
-c --- write out the sub-domain information ---
-c
-      write(ipr_unit,ERR=7000) npadom
-      do idom=1,npadom
-         write(ipr_unit,ERR=7000) ipagrd(idom), i_sw(idom), i_ne(idom),
-     &                  j_sw(idom), j_ne(idom), b_lay(idom), t_lay(idom)
-      enddo
-c
-c  ---- write the descriptions of the processes ---
-c
-      write(ipr_unit,ERR=7000) NPAPRC
-      do i=1,NPAPRC
-         write(ipr_unit,ERR=7000) prcnam(i)
-      enddo
-c
-      goto 9999
-c
-c----Error messages
-c
- 7000 continue
-      write(iout,'(//,a)') 'ERROR in WRTIPRHDR:'
-      write(iout,'(1X,2A)',ERR=9999) 'Writing header to the output ',
-     &                         'Integrated Process Rate (.ipr) file.'
-      call camxerr()
-c
- 9999 continue
-      return
-      end
+      subroutine wrtiprhdr(ibgdat,btime,iendat,etime)
+      use filunit
+      use grid
+      use chmstry
+      use camxcom
+      use procan
+c
+c----CAMx v5.40 111010
+c
+c     This routine writes the header to the output file for the Integrated
+c     Process Rates (IPR) data for the Process Analysis algorithm.  The header 
+c     data is designed to provide information about what data is contained
+c     in the rest of the file.
+c
+c     Copyright 1996 - 2010
+c     ENVIRON International Corporation
+c
+c     Modifications:
+c        11/06/01  Input dates are now Julian
+c
+c     Input arguments:
+c        btime      ending time for this period
+c        ibgdat     ending date for this period (YYJJJ)
+c        etime      ending time for this period
+c        iendat     ending date for this period (YYJJJ)
+c
+c     Subroutines Called:
+c
+c
+c     Called by:
+c        STARTUP
+c
+      include "camx.prm"
+c
+c-----Argument declarations
+c
+      integer ibgdat
+      real    btime 
+      integer iendat
+      real    etime 
+c
+c-----Local variables
+c
+      character*25 prcnam(NPAPRC)
+      character*10 iprname(MXSPEC)
+      integer      niprspc
+c
+c-----Entry point
+c
+c  --- load process names into local array ---
+c
+      prcnam(IPR_INIT)    = 'Initial concentration    '
+      prcnam(IPR_CHEM)    = 'Gas-phase chemistry      '
+      prcnam(IPR_AEMIS)   = 'Area emissions           '
+      prcnam(IPR_PTEMIS)  = 'Point source emissions   '
+      prcnam(IPR_PIGEMIS) = 'Plume-in-Grid change     '
+      prcnam(IPR_WADV)    = 'West boundary advection  '
+      prcnam(IPR_EADV)    = 'East boundary advection  '
+      prcnam(IPR_SADV)    = 'South boundary advection '
+      prcnam(IPR_NADV)    = 'North boundary advection '
+      prcnam(IPR_BADV)    = 'Bottom boundary advection'
+      prcnam(IPR_TADV)    = 'Top boundary advection   '
+      prcnam(IPR_DADV)    = 'Dilution in the vertical '
+      prcnam(IPR_WDIF)    = 'West boundary diffusion  '
+      prcnam(IPR_EDIF)    = 'East boundary diffusion  '
+      prcnam(IPR_SDIF)    = 'South boundary diffusion '
+      prcnam(IPR_NDIF)    = 'North boundary diffusion '
+      prcnam(IPR_BDIF)    = 'Bottom boundary diffusion'
+      prcnam(IPR_TDIF)    = 'Top boundary diffusion   '
+      prcnam(IPR_DDEP)    = 'Dry deposition           '
+      prcnam(IPR_WDEP)    = 'Wet deposition           '
+      prcnam(IPR_IAERO)   = 'Inorganic aerosol chem   '
+      prcnam(IPR_OAERO)   = 'Organic aerosol chem     '
+      prcnam(IPR_AQCHEM)  = 'Aqueous chemistry        '
+      prcnam(IPR_FINAL)   = 'Final concentration      '
+      prcnam(IPR_CONV)    = 'Units conversion         '
+      prcnam(IPR_VOL)     = 'Average cell volume      '
+c
+c --- fill name array with only non-radical species ---
+c
+      niprspc = 0
+      do ispc=1,navspc
+        if( lavmap(ispc) .GT. nrad ) then
+           niprspc = niprspc + 1 
+           iprname(niprspc) = spname(lavmap(ispc))
+        endif
+      enddo
+c
+c --- write the date and time of the simulation ---
+c
+      write(ipr_unit,ERR=7000) runmsg
+      write(ipr_unit,ERR=7000) ibgdat, btime, iendat, etime 
+c
+c --- write the information about the grids ---
+c
+      write(ipr_unit,ERR=7000) ngrid
+      write(ipr_unit,ERR=7000) xorg, yorg, ncol(1), nrow(1), delx, dely
+      do igrd=2,ngrid
+        xsize = delx / FLOAT( meshold(igrd) )
+        ysize = dely / FLOAT( meshold(igrd) )
+        orgx = (inst1(igrd)-1)*delx + xorg - xsize
+        orgy = (jnst1(igrd)-1)*dely + yorg - ysize
+        write(ipr_unit,ERR=7000) orgx, orgy, ncol(igrd), nrow(igrd), 
+     &                                                    xsize, ysize
+      enddo
+c
+c --- write the species output to file ---
+c
+      write(ipr_unit,ERR=7000) niprspc
+      do ispc=1,niprspc
+         write(ipr_unit,ERR=7000) iprname(ispc)
+      enddo
+c
+c --- write out the sub-domain information ---
+c
+      write(ipr_unit,ERR=7000) npadom
+      do idom=1,npadom
+         write(ipr_unit,ERR=7000) ipagrd(idom), i_sw(idom), i_ne(idom),
+     &                  j_sw(idom), j_ne(idom), b_lay(idom), t_lay(idom)
+      enddo
+c
+c  ---- write the descriptions of the processes ---
+c
+      write(ipr_unit,ERR=7000) NPAPRC
+      do i=1,NPAPRC
+         write(ipr_unit,ERR=7000) prcnam(i)
+      enddo
+c
+      goto 9999
+c
+c----Error messages
+c
+ 7000 continue
+      write(iout,'(//,a)') 'ERROR in WRTIPRHDR:'
+      write(iout,'(1X,2A)',ERR=9999) 'Writing header to the output ',
+     &                         'Integrated Process Rate (.ipr) file.'
+      call camxerr()
+c
+ 9999 continue
+      return
+      end
