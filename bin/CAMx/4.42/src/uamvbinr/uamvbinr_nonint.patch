--- /afs/psi.ch/user/a/andreani_s/data_10BG/src_linux/uamvbinr/uamvbinr.f	2003-04-08 08:01:32.674862054 +0200
+++ uamvbinr.f	2008-05-23 16:26:03.018234110 +0200
@@ -2,28 +2,49 @@
 c      based on uamvascii.f
 c      CONVERTS ASCII UAM-V FILES TO BINARY
 C
+C   Slightly changed by Daniel Oderbolz for non-interactive operation
 C
-      include 'uamvbinr.inc'
-
-      CHARACTER*80 InName,OutName,ErrName
-      CHARACTER*10 IFILE
+C   Call it like this: uamvbinr source dest type x-dim y-dim z-dim log
+C   e.g:               uamvbinr terrain_domain1_bx3_lucamx.asc terrain_domain1_bx3_lucamx.asc TERRAIN 95 79 14 terrain_domain1_bx3_lucamx.log
 
-      WRITE (*,100) 'ENTER FILE TYPE TO BE CONVERTED: '
-      READ (*,102) IFILE
-      WRITE (*,100) 'ENTER ASCII INPUT FILE TO BE CONVERTED: '
-      READ (*,102) InName
-      WRITE (*,100) 'ENTER NAME OF BINARY OUTPUT FILE: '
-      READ (*,102) OutName
-      WRITE (*,100) 'ENTER NAME FOR DIAGNOSTIC FILE: '
-      READ (*,102) ErrName
+      include 'uamvbinr.inc'
 
-      write(*,100) 'ENTER NOX, NOY, and NOZ: '
-      read(*,*) nox, noy, nlayer
+      CHARACTER*255 InName,OutName,ErrName
+      CHARACTER*10 IFILE,cnox,cnoy,cnlayer
+      
+c---  Read arguments   
+c---  This is pgf77 specific code!     
+      call getarg(1,InName)
+      call getarg(2,OutName)
+      call getarg(3,IFILE)
+      call getarg(4,cnox)
+      call getarg(5,cnoy)
+      call getarg(6,cnlayer)
+      call getarg(7,ErrName)
+
+c---  convert character data from the command line to integer
+
+      READ (cnox,*) nox
+      READ (cnoy,*) noy
+      READ (cnlayer,*) nlayer
+
+c      WRITE (*,100) 'ENTER FILE TYPE TO BE CONVERTED: '
+c      READ (*,102) IFILE
+c      WRITE (*,100) 'ENTER ASCII INPUT FILE TO BE CONVERTED: '
+c      READ (*,102) InName
+c      WRITE (*,100) 'ENTER NAME OF BINARY OUTPUT FILE: '
+c      READ (*,102) OutName
+c      WRITE (*,100) 'ENTER NAME FOR DIAGNOSTIC FILE: '
+c      READ (*,102) ErrName
+c
+c      write(*,100) 'ENTER NOX, NOY, and NOZ: '
+c      read(*,*) nox, noy, nlayer
 
 
       if (nox .gt. mxx .or. noy .gt. mxy) then
         write(*,*) 'Maximum region dimension exceeded.'
         write(*,*) 'Max x by y size is ', mxx, ' by ', mxy
+        write(*,*) 'Specified size is ', nox, ' by ', noy, ' by ', nlayer
         stop
       endif
 
