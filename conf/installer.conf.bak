################################################################################
#
# Special configuration for the installer.
#
# See http://people.web.psi.ch/oderbolz/CAMxRunner
#
# Put installation configuration and other CAMx version specific information here.
# 
# Leave the next line intact, it is used for change detection
# Version: $Id: installer.conf 8697 2013-05-21 13:08:00Z ciarelli_g $ 
#
# Written by Daniel C. Oderbolz (CAMxRunner@psi.ch),
# Released under the Creative Commons "Attribution-Share Alike 2.5 Switzerland"
# License, (http://creativecommons.org/licenses/by-sa/2.5/ch/deed.en)
################################################################################
# Who	When		What
# dco 	03.11.2008	Created
#
#
# All Variables (except system variables like OMP*) names start with CXR_
# Output File names end with OUTPUT_FILE
# Input File names end with INPUT_FILE
#
# Arrays of files are called OUTPUT_ARR_FILES AND INPUT_ARR_FILES
#
# Directories with _DIR
# Output directories with OUTPUT_DIR
# Executables with _EXEC
#
# Strings which are used as Floating point numbers, but are integer, need a trailing .
#
# Arrays must have an index 0 with a Dummy entry, we work in Fortran Land here.
#
# Also, entries in arrays which contain spaces must be protected by
# single (') quotes, because arrays are exported as space separated list

########################################
# HDF5 1.8.1 & zlib 1.2.3 & NetCDF 4 & IOAPI 3
########################################

# How many Megabytes do we need (rough estimation, integer!)
CXR_LIB_MEGABYTES_REQUIRED=200

# This must be a rule (expansion now would be wrong because CAMx version can change during installation)
export MYLIBDIR_RULE='${CXR_LIB_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/$HOSTTYPE'

# Where to download
CXR_ZLIB_TAR=zlib-1.2.3.tar.gz
CXR_ZLIB_TAR_LOC="ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/$CXR_ZLIB_TAR"

# Directory in the TAR
CXR_ZLIB_TAR_DIR=zlib-1.2.3

CXR_HDF_TAR=hdf5-1.8.1.tar.gz
CXR_HDF_TAR_LOC="ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4/$CXR_HDF_TAR"

# Directory in the TAR
CXR_HDF_TAR_DIR=hdf5-1.8.1

# Where to download netcdf
CXR_NETCDF_TAR=netcdf-4.0.tar.gz
CXR_NETCDF_TAR_LOC="http://www.unidata.ucar.edu/downloads/netcdf/ftp/$CXR_NETCDF_TAR"

# Directory in the TAR
CXR_NETCDF_TAR_DIR=netcdf-4.0

# Where to download IOAPI
CXR_IOAPI_TAR=ioapi-3.0.tar.gz
CXR_IOAPI_TAR_LOC="http://www.baronams.com/products/ioapi/$CXR_IOAPI_TAR"

# Directory in the TAR
CXR_IOAPI_TAR_DIR=ioapi

########################################
# CAMx Defaults - at least CXR_CAMX_TAR/CXR_CAMX_TAR_LOC
# need to be defined in version specific files!
########################################

# How many Megabytes do we need (rough estimation, integer!)
CXR_CAMX_MEGABYTES_REQUIRED=200

# Source dir of CAMx
CXR_CAMX_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/${CXR_MODEL}

# Directory in the TAR
CXR_CAMX_TAR_DIR=.

################################################################################
################################################################################
# Settings of modules
################################################################################
################################################################################

# Note that some settings (like binary names) are gathered together in other sections

################################################################################
# Testcase specific stuff
################################################################################

# Where to install the testcase
TESTCASE_DIR=${CXR_RUN_DIR}/testcase/${CXR_MODEL}/${CXR_MODEL_VERSION}

########################################
# SRFLND
########################################

# Where to find the code to compile?
CXR_SRFLND_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/srflnd"


########################################
# AVGDIF
########################################

# Where do we find the inputs?
CXR_REFERENCE_FILE_RULE='$TESTCASE_DIR/CAMx.v4.51.midwest.36.12.${CXR_DATE_RAW}.avrg.grd0${CXR_IGRID}'

# Where do we put the output file?
CXR_AVGDIF_OUTPUT_FILE_RULE='$CXR_LOG_OUTPUT_DIR/$CXR_RUN-avgdif_report-${CXR_DATE_RAW}.avrg.grd0${CXR_IGRID}.log'


# Define min and may layers to compare (to save time, leave both on 1)
CXR_AVGDIF_MIN_LAYER=1
CXR_AVGDIF_MAX_LAYER=1

########################################
# Directories used only for compilation
########################################

# Directories for essential executables (normally links to the most current version)
# NO TRAILING / ALLOWED
CXR_SQLITE_SRC_DIR=${CXR_BIN_DIR}/src/sqlite3
CXR_TSORT_SRC_DIR=${CXR_BIN_DIR}/src/tsort
CXR_PBZIP2_SRC_DIR=${CXR_BIN_DIR}/src/pbzip2
CXR_LZO_SRC_DIR=${CXR_BIN_DIR}/src/lzo
CXR_LZOP_SRC_DIR=${CXR_BIN_DIR}/src/lzop
CXR_PROJ_SRC_DIR=${CXR_BIN_DIR}/src/proj
CXR_DOS2UNIX_SRC_DIR=${CXR_BIN_DIR}/src/dos2unix

# Pre- and Postprocessors
CXR_AHOMAP_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/ahomap"
CXR_TUV_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/tuv"
CXR_SRFLND_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/srflnd"
CXR_AVGDIF_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/avgdif"
CXR_ICBCPREP_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/icbcprep"
CXR_CAMXPOST_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/camxpost"
CXR_O3MAP_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/o3map"
CXR_METCONVERT_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/metconvert"

# SA Tools
CXR_PSAT_COMBINE_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/psat_combine
CXR_EXT_IPR_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/ext_ipr
CXR_EXT_IRR_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/ext_irr
CXR_VERTAVG_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/vertavg

# Converters
# We currently do not use all of them, don't worry.
# I guess the list will shrink later
CXR_BIN2ASC_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/bin2asc
CXR_AIRCONV_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/airconv
CXR_AIRASCII_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/airascii
CXR_UAMVASCII_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/uamvascii
CXR_UAMVBINR_SRC_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/uamvbinr

########################################
# Collect all source directories
########################################

# Source directories for essential executables
CXR_BIN_SCR_ARR="$CXR_SQLITE_SRC_DIR \
                 $CXR_TSORT_SRC_DIR \
                 $CXR_PBZIP2_SRC_DIR \
                 $CXR_LZO_SRC_DIR \
                 $CXR_LZOP_SRC_DIR \
                 $CXR_PROJ_SRC_DIR \
                 $CXR_DOS2UNIX_SRC_DIR"

# Put all source directories of pre- and postprocessors to compile here (space separated- note the double quote!)
CXR_PRE_AND_POST_PROG_SCR_ARR="$CXR_SRFLND_SRC_DIR \
                               $CXR_AVGDIF_SRC_DIR \
                               $CXR_AHOMAP_SRC_DIR \
                               $CXR_TUV_SRC_DIR \
                               $CXR_ICBCPREP_SRC_DIR \
                               $CXR_PSAT_COMBINE_SRC_DIR \
                               $CXR_EXT_IPR_SRC_DIR \
                               $CXR_EXT_IRR_SRC_DIR \
                               $CXR_VERTAVG_SRC_DIR \
                               $CXR_CAMXPOST_SRC_DIR \
                               $CXR_O3MAP_SRC_DIR \
                               $CXR_METCONVERT_SRC_DIR"

# Converters
CXR_CONVERTER_SCR_ARR="$CXR_BIN2ASC_SRC_DIR \
                       $CXR_AIRCONV_SRC_DIR \
                       $CXR_AIRASCII_SRC_DIR \
                       $CXR_UAMVASCII_SRC_DIR \
                       $CXR_UAMVBINR_SRC_DIR"


################################################################################
# Installer - specific settings (find more in the CAMx version specific .conf files)
################################################################################

# A comma-separated list of Probing tools
# Note that support of CAMxRunner is still limited in this area
CXR_SUPPORTED_CAMX_PROBING_TOOLS="None OSAT PSAT DDM PA RTRAC"

# A comma-separated list of parallel paradigms.
# 4.51 only supports these - MPI needs 5.x
CXR_SUPPORTED_PARALLEL_PARADIGMS="None OMP"

# A list of supported platforms for CAMx (could be determined using uname - but this is configures job!)
# Taken from the Makefile
CXR_SUPPORTED_PLATFORMS="dec pg_linux pg_linuxomp i_linux i_linuxomp ab_linux sgi sgiomp sun hp ibm"

# Directory rules to find patches. CXR_CURRENT_BINARY contains the name of the current binary (e. g. 'CAMx'), CXR_CURRENT_PLATFORM the platform we compile for (e. g. 'i_linuxomp')
CXR_PATCH_ALL_DIR_RULE='${CXR_INSTALLER_INPUT_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/patches/${CXR_CURRENT_BINARY}/all_platforms'
CXR_PATCH_PLATFORM_DIR_RULE='${CXR_INSTALLER_INPUT_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/patches/${CXR_CURRENT_BINARY}/$CXR_CURRENT_PLATFORM'
