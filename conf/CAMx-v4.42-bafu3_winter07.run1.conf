#!/usr/bin/env bash
#
# Runner script for CAMx 4.42/4.51 - Configuration. 
# See http://people.web.psi.ch/oderbolz/CAMxRunner
# 
# Leave the next line intact, it is used for change detection
# Version: $Id$ 
#
################################################################################
# Who	When		What
# dco 	02.05.2008	Created
#
#
# All Variables (except system variables like OMP*) names start with CXR_
# Output File names end with OUTPUT_FILE
# Input File names end with INPUT_FILE
#
# Arrays of files are called OUTPUT_ARR_FILES AND INPUT_ARR_FILES
#
# Directories with _DIR
# Output directories with OUTPUT_DIR
# Executables with _EXEC
#
# Strings which are used as Floating point numbers, but are integer, need a trailing .
#
# Arrays must have an index 0 with a Dummy entry, we work n Fortran Land here.
#
# Also, entries in arrays which contain spaces must be protected by
# single (') quotes, because arrays are exported as space separated list

################################################################################
# Notification options
################################################################################
CXR_MAILADDR=CAMxRunner@psi.ch
CXR_SMSNR=0765888275
CXR_SMSPROVIDER=sms.switch.ch
CXR_SMSADDR=${CXR_SMSNR}@${CXR_SMSPROVIDER}

#If this Variable is true, SMS will be sent
CXR_SEND_SMS=false

################################################################################
# CAMx Version
################################################################################

# Set in the runner depending on Link name


################################################################################
# Timespan of simulation
################################################################################

# The Start of the simulation in YYYY-MM-DD notation
CXR_START_DATE=2007-01-01

# The Stop of the simulation in YYYY-MM-DD notation
CXR_STOP_DATE=2007-01-31

# Must be in HHMI Format, applies just to first and last day, all others are from 0000 to 2400
CXR_START_HOUR_FIRST_DAY=0000
CXR_STOP_HOUR_LAST_DAY=2400

# Timezone (0=UTC,5=EST,6=CST,7=MST,8=PST)
CXR_TIME_ZONE=0

# The Simulation intervals in Minutes
CXR_MAXIMUM_TIMESTEP=15
CXR_MET_INPUT_FREQUENCY=60
CXR_EMS_INPUT_FREQUENCY=60
CXR_OUTPUT_FREQUENCY=60

################################################################################
# Geometry of simulation
################################################################################

CXR_MAP_PROJECTION=LAMBERT # (LAMBERT,POLAR,UTM,LATLON)


CXR_UTM_ZONE=0

# Floats
CXR_POLAR_LONGITUDE_POLE=0.        # deg (west<0south<0)
CXR_POLAR_LATITUDE_POLE=0.         # deg (west<0south<0)
CXR_LAMBERT_CENTER_LONGITUDE=3.5  # deg (west<0south<0)
CXR_LAMBERT_CENTER_LATITUDE=47.    # deg (west<0south<0)
CXR_LAMBERT_TRUE_LATITUDE1=46.     # deg (west<0south<0)
CXR_LAMBERT_TRUE_LATITUDE2=48.     # deg (west<0south<0)
	
################################################################################
# Grid definition
################################################################################

# How many grids are used?
CXR_NUMBER_OF_GRIDS=3

# Of course, more grids mean more settings down here

#Master grid
CXR_MASTER_ORIGIN_XCOORD=-1282.5       # km or deg SW corner of cell(11)
CXR_MASTER_ORIGIN_YCOORD=-1066.5       # km or deg SW corner of cell (11)

# Floats
CXR_MASTER_CELL_XSIZE=27.               # km or deg
CXR_MASTER_CELL_YSIZE=27.               # km or deg


CXR_MASTER_GRID_COLUMNS=95
CXR_MASTER_GRID_ROWS=79

CXR_NUMBER_OF_LAYERS[1]=14

# Grid 0 and 1 are dummies
CXR_NEST_MESHING_FACTOR[0]=-        
CXR_NEST_BEG_I_INDEX[0]=-          
CXR_NEST_END_I_INDEX[0]=-          
CXR_NEST_BEG_J_INDEX[0]=-          
CXR_NEST_END_J_INDEX[0]=-          
CXR_NUMBER_OF_LAYERS[0]=-

# This is a dummy because entries 1 are given by the MASTER settings
CXR_NEST_MESHING_FACTOR[1]=-        
CXR_NEST_BEG_I_INDEX[1]=-          
CXR_NEST_END_I_INDEX[1]=-          
CXR_NEST_BEG_J_INDEX[1]=-         
CXR_NEST_END_J_INDEX[1]=- 
# Number of layers set above         

# Second grid
CXR_NEST_MESHING_FACTOR[2]=3        # Relative to master grid
CXR_NEST_BEG_I_INDEX[2]=51          # Relative to master grid
CXR_NEST_END_I_INDEX[2]=74          # Relative to master grid
CXR_NEST_BEG_J_INDEX[2]=32          # Relative to master grid
CXR_NEST_END_J_INDEX[2]=49          # Relative to master grid
CXR_NUMBER_OF_LAYERS[2]=14
	
# Third grid
CXR_NEST_MESHING_FACTOR[3]=9        # Relative to master grid
CXR_NEST_BEG_I_INDEX[3]=55          # Relative to master grid
CXR_NEST_END_I_INDEX[3]=68          # Relative to master grid
CXR_NEST_BEG_J_INDEX[3]=35          # Relative to master grid
CXR_NEST_END_J_INDEX[3]=44          # Relative to master grid
CXR_NUMBER_OF_LAYERS[3]=14

################################################################################
# Model options (Solver etc.)
################################################################################
CXR_DIAGNOSTIC_ERROR_CHECK=false    # True=will stop after 1st timestep
CXR_ADVECTION_SOLVER=PPM      # (PPM,BOTT)
CXR_CHEMISTRY_SOLVER=CMC      # (CMC,IEH,LSODE)
CXR_PIG_SUBMODEL=None     # (None,GREASD,IRON)
CXR_PROBING_TOOL=None     # (None,OSAT,PSAT,GOAT,APCA,DDM,PA,RTRAC)
CXR_CHEMISTRY=true
CXR_DRY_DEPOSITION=true
CXR_WET_DEPOSITION=true
CXR_STAGGERED_WINDS=true
CXR_GRIDDED_EMISSIONS=true
CXR_POINT_EMISSIONS=false
CXR_IGNORE_EMISSION_DATES=true

################################################################################
# Output specifications
################################################################################

CXR_AVERAGE_OUTPUT_3D=true
CXR_HDF_FORMAT_OUTPUT=false

################################################################################
# Chemical species
################################################################################

# First unset array
unset CXR_OUTPUT_SPECIES_NAMES

# Entry 0 is a dummy, we want our arrays to start with index 1
CXR_OUTPUT_SPECIES_NAMES[0]=-
CXR_OUTPUT_SPECIES_NAMES[1]=NO
CXR_OUTPUT_SPECIES_NAMES[2]=NO2
CXR_OUTPUT_SPECIES_NAMES[3]=O3
CXR_OUTPUT_SPECIES_NAMES[4]=TOL
CXR_OUTPUT_SPECIES_NAMES[5]=XYL
CXR_OUTPUT_SPECIES_NAMES[6]=FORM
CXR_OUTPUT_SPECIES_NAMES[7]=PAN
CXR_OUTPUT_SPECIES_NAMES[8]=CO
CXR_OUTPUT_SPECIES_NAMES[9]=HONO
CXR_OUTPUT_SPECIES_NAMES[10]=HNO3
CXR_OUTPUT_SPECIES_NAMES[11]=H2O2
CXR_OUTPUT_SPECIES_NAMES[12]=ISOP
CXR_OUTPUT_SPECIES_NAMES[13]=PNA
CXR_OUTPUT_SPECIES_NAMES[14]=SO2
CXR_OUTPUT_SPECIES_NAMES[15]=NH3
CXR_OUTPUT_SPECIES_NAMES[16]=PH2O
CXR_OUTPUT_SPECIES_NAMES[17]=PNO3
CXR_OUTPUT_SPECIES_NAMES[18]=PSO4
CXR_OUTPUT_SPECIES_NAMES[19]=PNH4
CXR_OUTPUT_SPECIES_NAMES[20]=POA
CXR_OUTPUT_SPECIES_NAMES[21]=PEC
CXR_OUTPUT_SPECIES_NAMES[22]=SOA1
CXR_OUTPUT_SPECIES_NAMES[23]=SOA2
CXR_OUTPUT_SPECIES_NAMES[24]=SOA3
CXR_OUTPUT_SPECIES_NAMES[25]=SOA4
CXR_OUTPUT_SPECIES_NAMES[26]=SOA5

# Automatically count # species (subtract 1 for dummy)
CXR_NUMBER_OF_OUTPUT_SPECIES=$(( ${#CXR_OUTPUT_SPECIES_NAMES[@]} - 1 ))

################################################################################
# Probing settings not included here
################################################################################

################################################################################
# Labels
################################################################################
CXR_MET_PROJECT=uw3
CXR_MET_SCENARIO=s151

CXR_EMMISS_PROJECT=${CXR_MET_PROJECT}
CXR_EMMISS_SCENARIO=sem050
CXR_CAMX_PERIOD=winter07
CXR_CAMX_SCENARIO=${CXR_MET_SCENARIO}	
CXR_CAMX_CUSTOMER=bafu3

################################################################################
# Directories
################################################################################


CXR_BASE_DIR=/afs/psi.ch/intranet/LAC/oderbolz/CAMxRuns/Runs/${CXR_RUN}
CXR_INPUT_DIR=${CXR_BASE_DIR}/Inputs
CXR_METEO_DIR=/afs/psi.ch/intranet/LAC/keller_j/linuxmm5/out
CXR_LANDUSE_DIR=/afs/psi.ch/intranet/LAC/keller_j/linuxmm5/out/const
CXR_EMISSION_DIR=${CXR_BASE_DIR}/Emiss
CXR_PTSRCE_DIR=${CXR_BASE_DIR}/Ptsrce

CXR_OUTPUT_DIR=${CXR_BASE_DIR}/Outputs
CXR_PA_OUTPUT_DIR=${CXR_OUTPUT_DIR}/PA
CXR_AQMFAD_OUTPUT_DIR=${CXR_OUTPUT_DIR}/aqmfad

# Where is the Chemparam file (dependent on CAMx executable)
CXR_CHEMPARAM_FILE=${CXR_MODEL_BIN_DIR}/chemparam/CAMx4.4.chemparam.4_CF

# Where is the Chemparam file
CXR_CHEMPARAM_FILE=./chemparam/CAMx4.4.chemparam.4_CF

################################################################################
# Rules for filenames (See http://people.web.psi.ch/oderbolz/CAMxRunner#FileRules)
#
# These ABSOLUTELY need 'single quotes' around them, otherwise the shell expands them here!
################################################################################

################## Grid independent ############################################
CXR_PHOTOLYIS_RATES_FILE_RULE='${CXR_INPUT_DIR}/tuv_${CXR_CAMX_CUSTOMER}_winter${CXR_YEAR_S}.out'
CXR_INITIAL_CONDITIONS_FILE_RULE='${CXR_INPUT_DIR}/ic_${CXR_CAMX_CUSTOMER}_moz.bin'
CXR_BOUNDARY_CONDITIONS_FILE_RULE='${CXR_INPUT_DIR}/bc_${CXR_CAMX_CUSTOMER}_moz_${CXR_YEAR_S}${CXR_MONTH}${CXR_DAY}.bin'
CXR_TOP_CONCENTRATIONS_FILE_RULE='${CXR_INPUT_DIR}/topconc_${CXR_CAMX_CUSTOMER}_winter${CXR_YEAR_S}.asc'
CXR_ALBEDO_HAZE_OZONE_FILE_RULE='${CXR_INPUT_DIR}/ahomap_${CXR_CAMX_CUSTOMER}_3grids_winter${CXR_YEAR_S}.out'
CXR_POINT_SOURCES_FILE_RULE=''

CXR_MASTER_GRID_RESTART_FILE_RULE='${CXR_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW_YESTERDAY}.inst'
CXR_NESTED_GRID_RESTART_FILE_RULE='${CXR_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW_YESTERDAY}.finst'

CXR_PIG_RESTART_FILE_RULE=''

CXR_ROOT_OUTPUT_FILE_RULE='${CXR_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW}'
CXR_PA_ROOT_OUTPUT_FILE_RULE='$CXR_PA_OUTPUT_DIR/${CXR_RUN}.${CXR_DATE_RAW}'

# These are used 
#	* to prevent overwriting of existing files 
#	* the creation of the aqmfad directory
#	* to convert the binary output files

CXR_DIAG_FILE_RULE='${CXR_ROOT_OUTPUT}.diag'
CXR_FINST_FILE_RULE='${CXR_ROOT_OUTPUT}.finst'
CXR_INST_FILE_RULE='${CXR_ROOT_OUTPUT}.inst'
CXR_MASS_FILE_RULE='${CXR_ROOT_OUTPUT}.mass'
CXR_OUT_FILE_RULE='${CXR_ROOT_OUTPUT}.out'

################## Grid spcecific ##############################################

# These NEED the variable ${CXR_IGRID} somewhere (the grid number)

# Input ########################################################################

#Landuse
CXR_LANDUSE_FILE_RULE='${CXR_INPUT_DIR}/terrain_domain${CXR_IGRID}_${CXR_MET_PROJECT}_lucamx.bin'

# Pressure
CXR_PRESSURE_FILE_RULE='{$CXR_METEO_DIR}/${CXR_DATE_RAW}/${CXR_MET_SCENARIO}/camx_zp_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}'

# Wind
CXR_WIND_FILE_RULE='${CXR_METEO_DIR}/${CXR_DATE_RAW}/${CXR_MET_SCENARIO}/camx_uv_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}'

# Temperature
CXR_TEMPERATURE_FILE_RULE='${CXR_METEO_DIR}/${CXR_DATE_RAW}/${CXR_MET_SCENARIO}/camx_tp_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}'

# Vapor
CXR_VAPOR_FILE_RULE='${CXR_METEO_DIR}/${CXR_DATE_RAW}/${CXR_MET_SCENARIO}/camx_qa_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}'

# Cloud
CXR_CLOUD_FILE_RULE='${CXR_METEO_DIR}/${CXR_DATE_RAW}/${CXR_MET_SCENARIO}/camx_cr_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}'

# Vertical K
CXR_K_FILE_RULE='${CXR_METEO_DIR}/${CXR_DATE_RAW}/${CXR_MET_SCENARIO}/camx_kv_CMAQ_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}'
                
# Emissions
CXR_EMISSION_BIN_FILE_RULE='${CXR_EMISSION_DIR}/camx_emiss_domain${CXR_IGRID}_${CXR_EMMISS_PROJECT}_${CXR_EMMISS_SCENARIO}_${CXR_DATE_RAW}.bin'

# Output #######################################################################

CXR_DEPN_FILE_RULE='${CXR_ROOT_OUTPUT}.depn.grd0${CXR_IGRID}'

CXR_AVG_FILE_RULE='${CXR_ROOT_OUTPUT}.avrg.grd0${CXR_IGRID}'  

# We create the ASCII version of thefiles in the aqmfad directory      
# All rules start with the CXR_AQMFAD_OUTPUT_DIR and end with .asc    	              	
CXR_AVG_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW}.avrg.grd0${CXR_IGRID}.${CXR_ASC_EXT}'

# Landuse ASCII File is provided by MM5, we will convert it to binary
CXR_LANDUSE_ASC_FILE_RULE='${CXR_LANDUSE_DIR}/terrain_domain${CXR_IGRID}_${CXR_MET_PROJECT}_lucamx.asce'

# Terrain elevation for aqmfad
CXR_TERRAIN_ASC_FILE_RULE='${CXR_LANDUSE_DIR}/terrain_domain${CXR_IGRID}_${CXR_MET_PROJECT}_terrcamx.asce'

CXR_PRESSURE_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_zp_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}${CXR_DAY_METEO}.asc'
CXR_WIND_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_uv_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}${CXR_DAY_METEO}.asc'
CXR_TEMPERATURE_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_tp_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}${CXR_DAY_METEO}.asc'
CXR_VAPOR_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_qa_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}${CXR_DAY_METEO}.asc'
CXR_CLOUD_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_cr_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}${CXR_DAY_METEO}.asc'
CXR_K_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_kv_CMAQ_domain${CXR_IGRID}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}${CXR_DAY_METEO}.asc'		

#aqmfad does not consider emissions and clouds

################################################################################
# Name/Path of the CAMx.in file
################################################################################

# A rule that must be expanded
CXR_MODEL_CTRL_FILE_RULE='${CXR_STATE_DIR}/CAMx.${CXR_DATE_RAW}.in'


################################################################################
# Machine name
################################################################################

CXR_MACHINE=$(uname -n)


################################################################################
# Executables
################################################################################

#### It is recommended to compile the binaries
#### into binaries that carry the machine type in their name
#### CAMxRunner -I can do this for you.
#### 
#### Also the function main.getBinaryName then selects the most appropriate one.
#### replace with literal for your own choice

# The binary to convert bin2asc
CXR_BIN2ASC_EXEC=$(main.getBinaryName bin2asc)

# The binary to convert asc2bin
CXR_ASC2IBN_EXEC=$(main.getBinaryName asc2bin)

# The binary to convert Emission ascii to Bin
CXR_AIRCONV_EXEC=$(main.getBinaryName airconv)

# The binary to convert MM5 Input
CXR_UAMVASCII_EXEC=$(main.getBinaryName uamvascii)

# Yet another binary to convert MM5 Input
CXR_AIRASCII_EXEC=$(main.getBinaryName airascii)


################################################################################
# bin2asc conversion
################################################################################
#No leading dot please
CXR_ASC_EXT=asc

################################################################################
# The OPM and EXEC Settings are machine-dependent.
################################################################################ 
# Are we on a multicore system?
CXR_NUM_CORES=$(main.countCores)

# This can be either None, OMP or MPI (MPI is not currently implemented). OMP is recommended.
# the CAMx executable mifust provide this!
CXR_PARALLEL_PARADIGM=OMP

################################################################################
# OpenMP settings
################################################################################
# Switch on OMP
# If num_cores=1, OMP is turned off

# Number of CPUS
export NCPUS=$CXR_NUM_CORES

# Set number of OpenMP threads (usually equals CPU number)
export OMP_NUM_THREADS=$CXR_NUM_CORES

# Per Thread stack size. Can lead to problems if both too large or too small...
export MPSTKZ=128M
