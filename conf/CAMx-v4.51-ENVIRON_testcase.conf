#!/usr/bin/env bash
#
# Runner script for CAMx 4.42/4.51 - Configuration. 
# See http://people.web.psi.ch/oderbolz/CAMxRunner
# 
# Leave the next line intact, it is used for change detection
# Version: $Id$ 
#
# Written by Daniel C. Oderbolz (CAMxRunner@psi.ch),
# Released under the Creative Commons "Attribution-Share Alike 2.5 Switzerland"
# License, (http://creativecommons.org/licenses/by-sa/2.5/ch/deed.en)
################################################################################
# Who	When		What
# dco 	02.05.2008	Created
#
#
# All Variables (except system variables like OMP*) names start with CXR_
# Output File names end with OUTPUT_FILE
# Input File names end with INPUT_FILE
#
# Arrays of files are called OUTPUT_ARR_FILES AND INPUT_ARR_FILES
#
# Directories with _DIR
# Output directories with OUTPUT_DIR
# Executables with _EXEC
#
# Strings which are used as Floating point numbers, but are integer, need a trailing .
#
# Arrays must have an index 0 with a Dummy entry, we work in Fortran Land here.
#
# Also, entries in arrays which contain spaces must be protected by
# single (') quotes, because arrays are exported as space separated list

# Introduce the file
cxr_main_logger -v "CAMx-v4.51-ENVIRON_testcase.conf"  "This is the CAMx-v4.51-ENVIRON_testcase.conf file being lodaded"


################################################################################
# Model name (CXR_MODEL) and  Version (CXR_MODEL_VERSION) are set by the link name!!
################################################################################

################################################################################
# Notification options
################################################################################
CXR_MAILADDR=me@nowhere.com

CXR_SMSNR=4711
CXR_SMSPROVIDER=sms.switch.ch
CXR_SMSADDR=${CXR_SMSNR}@${CXR_SMSPROVIDER}

#If this Variable is true, SMS will be sent
CXR_SEND_SMS=false

################################################################################
# Timespan of simulation
################################################################################

# The Start of the simulation in YYYY-MM-DD notation
CXR_START_DATE=2002-06-03

# The Stop of the simulation in YYYY-MM-DD notation
CXR_STOP_DATE=2002-06-04

# Must be in HHHH Format
CXR_START_HOUR=0000
CXR_STOP_HOUR=2400

# Timezone (0=UTC,5=EST,6=CST,7=MST,8=PST)
CXR_TIME_ZONE=0

# The Simulation intervals in Minutes (Floats!)
CXR_MAXIMUM_TIMESTEP=15.
CXR_MET_INPUT_FREQUENCY=60.
CXR_EMS_INPUT_FREQUENCY=60.
CXR_OUTPUT_FREQUENCY=60.

################################################################################
# Chemical Mechanism
################################################################################

# Here choose between these possibilities (taken from the CAMx Guide)
# 3 (Carbon Bond IV - Gery et al. 1989)
# 1 (same as above, but with reactive chlorine chemistry - Tanaka et al., 2000)
# 4 (Carbon Bond IV - CB4)
# 5 (SAPRC99, Carter, 2000)
# 6 (Carbon Bond version 2005 - CB05)
# 10 (User defined)

CXR_CHEMICAL_MECHANISM=4

# Choose between 
# CF for (Coarse fine) 
# CF+hg (Coarse fine with mercury)
# CMU (Carnegie Mellon sectional model) 
# NONE (No Aerosols)
# Aerosol Chemistry is currently only supported with mechanisms 4 and 6 - CAMxRunner will complain but try anyway
CXR_AEROSOL_MECHANISM=CF

# The CAMxRunner determines the name of the chemparam file automatically
# but you can overwrite this behavior by setting this parameter
# CXR_CHEMPARAM_INPUT_FILE=

################################################################################
# Directories
################################################################################

CXR_BASE_DIR=${CXR_RUN_DIR}/testcase/${CXR_MODEL}/${CXR_MODEL_VERSION}
CXR_INPUT_DIR=${CXR_BASE_DIR}/inputs
CXR_METEO_DIR=${CXR_INPUT_DIR}/met
CXR_LANDUSE_DIR=${CXR_INPUT_DIR}
CXR_EMISSION_DIR=${CXR_BASE_DIR}/emiss
CXR_PTSRCE_DIR=${CXR_BASE_DIR}/ptsrce

# Input preparation directories
CXR_EMISSION_SOURCE_DIR=${CXR_BASE_DIR}/emiss

# Output directory
CXR_OUTPUT_DIR=${CXR_BASE_DIR}/outputs

################################################################################
# CAMxRunner specific settings
################################################################################

################################################################################
# If you want to disable modules of the CAMxRunner, do it here
################################################################################

# Set this to false to disable CAMx in this run
CXR_RUN_MODEL=true

# This string contains the space-separated module names of
# unwanted daily preprocessors like "create_emissions"
# If "skip_all" is given, all daily preprocessors are skipped

CXR_DISABLED_DAILY_PREPROC="skip_all"

# This string contains the space-separated  module names of
# unwanted one-time preprocessors.
# If "skip_all" is given, all one-time preprocessors are skipped

CXR_DISABLED_ONCE_PREPROC="skip_all"

# This string contains the space-separated module names of
# unwanted daily postprocessors like "prepare_output_dir convert_output"
# If "skip_all" is given, all daily postprocessors are skipped
	
CXR_DISABLED_DAILY_POSTPROC="skip_all"

# This string contains the space-separated module names of
# unwanted one-time postprocessors.
# If "skip_all" is given, all one-time postprocessors are skipped

export  CXR_DISABLED_ONCE_POSTPROC="skip_all"

################################################################################
# Preprocessors
################################################################################	


################################################################################
# Postprocessors
################################################################################	


########################################
# extract_station_data
########################################	

# This is the IDL procedure for the extraction
# Because it is not executable, we treat it as an input file
CXR_STATION_PROC_INPUT_FILE=${CXR_POSTPROCESSOR_DAILY_INPUT_DIR}/extract_station_data/extract_nabel_stations.pro

# Do we run processing parallel?
# Means that modules marked as parallel will also run parallel.
# Modules not marked parallel will never be ren parallel.
CXR_PARALLEL_PROCESSING=false

# Maximal number of parallel processes set later

# Define the prefix for disabled scripts (no dot please)
CXR_DISABLED_EXT=disabled

# Stages that the stage controller knows
CXR_STATE_CONTINUE=CONTINUE
CXR_STATE_START=START
CXR_STATE_STOP=STOP
CXR_STATE_ERROR=ERROR

# Change this in case the name of the runner script changes
CXR_RUNNER_NAME=CAMxRunner.sh

# Used to tell a single step from all steps
CXR_RUN_ALL=all

################################################################################
# CAMxRunner Internal stuff
################################################################################

# Accepted error threshold before stop. (-1 turns off this check)
CXR_ERROR_THRESHOLD=50
		
# Supported model names
CXR_SUPPORTED_MODELS="CAMx PMCAMx"
#                            |    ^ 
#                      Model 0    |
#                           Model 1

# Supported CAMx Versions (space separated)
CXR_SUPPORTED_MODEL_VERSIONS[0]="4.42 4.51"
CXR_SUPPORTED_MODEL_VERSIONS[1]="2008"


# Comma separated list of subdirectories which must be in $CXR_RUN_DIR
CXR_RUN_SUBDIRS="bin conf common doc log preproc postproc state templates"

# Comma separated list of subdirectories containig version-specific driectories
CXR_RUN_VERSION_SUBDIRS="bin common preproc postproc"


################################################################################
# Rules for filenames (See http://people.web.psi.ch/oderbolz/CAMxRunner#FileRules)
#
# There are more filerules in the Probing sections of this file
#
# These ABSOLUTELY need 'single quotes' around them, otherwise the shell expands them here!
################################################################################

################## Grid independent ############################################

# Input Preparation ############################################################


# Input ########################################################################

CXR_PHOTOLYIS_RATES_FILE_RULE='${CXR_INPUT_DIR}/tuv.200206.STL.txt'
CXR_INITIAL_CONDITIONS_FILE_RULE='${CXR_INPUT_DIR}/IC.vistas_2002gt2a_STL_36_68X68_16L.2002081'
CXR_BOUNDARY_CONDITIONS_FILE_RULE='${CXR_INPUT_DIR}/BC.vistas_2002gt2a_STL_36_68X68_16L.2002${CXR_DOY}'
CXR_TOP_CONCENTRATIONS_FILE_RULE='${CXR_INPUT_DIR}/TopC.vistas_2002gt2a_STL_36_68X68_16L.2002081'
CXR_ALBEDO_HAZE_OZONE_FILE_RULE='${CXR_INPUT_DIR}/ahomap.200206.STL_36_68X68_12_92X113.txt'
CXR_POINT_SOURCES_FILE_RULE='${CXR_INPUT_DIR}/ptsrce.stl.36km.2002${JUL}.a0.bin'

CXR_MASTER_GRID_RESTART_FILE_RULE='${CXR_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW_YESTERDAY}.inst'
CXR_NESTED_GRID_RESTART_FILE_RULE='${CXR_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW_YESTERDAY}.finst'

# More restart rules in the probing sections later

CXR_PIG_RESTART_FILE_RULE=''

CXR_ROOT_OUTPUT_FILE_RULE='${CXR_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW}'


# These are used 
#	* to prevent overwriting of existing files 
#	* the creation of the aqmfad directory
#	* to convert the binary output files

CXR_DIAG_FILE_RULE='${CXR_ROOT_OUTPUT}.diag'
CXR_FINST_FILE_RULE='${CXR_ROOT_OUTPUT}.finst'
CXR_INST_FILE_RULE='${CXR_ROOT_OUTPUT}.inst'
CXR_MASS_FILE_RULE='${CXR_ROOT_OUTPUT}.mass'
CXR_OUT_FILE_RULE='${CXR_ROOT_OUTPUT}.out'


################## Grid spcecific ##############################################

# These NEED the variable ${i} somewhere (the grid number)

# Input Preparation ############################################################

CXR_EMISSION_ASC_FILE_RULE='${CXR_EMISSION_SOURCE_DIR}/${CXR_DATE_RAW}/${CXR_EMMISS_SCENARIO}/camx_emiss_domain${i}_${CXR_MET_PROJECT}_${CXR_EMMISS_SCENARIO}_${CXR_DATE_RAW}.asc'


# Input ########################################################################

#Landuse
CXR_LANDUSE_FILE_RULE='${CXR_INPUT_DIR}/lu.STL_grid-${i}.bin'

# Pressure
CXR_PRESSURE_FILE_RULE='${CXR_METEO_DIR}/camx.zp.${CXR_DATE_RAW}.grid-${i}.bin'

# Wind
CXR_WIND_FILE_RULE='${CXR_METEO_DIR}/camx.uv.${CXR_DATE_RAW}.grid-${i}.bin'

# Temperature
CXR_TEMPERATURE_FILE_RULE='${CXR_METEO_DIR}/camx.tp.${CXR_DATE_RAW}.grid-${i}.bin'

# Vapor
CXR_VAPOR_FILE_RULE='${CXR_METEO_DIR}/camx.qa.${CXR_DATE_RAW}.grid-${i}.bin'

# Cloud
CXR_CLOUD_FILE_RULE='${CXR_METEO_DIR}/camx.cr.${CXR_DATE_RAW}.grid-${i}.bin'

# Vertical K
CXR_K_FILE_RULE='${CXR_METEO_DIR}/camx.kv.${CXR_DATE_RAW}.grid-${i}.bin'

# Emissions
CXR_EMISSION_FILE_RULE='${CXR_EMISSION_DIR}/emiss.stl.grid-${i}.${CXR_DATE_RAW}.a1.bin'

# Output #######################################################################

#Deposition file
CXR_DEPN_FILE_RULE='${CXR_ROOT_OUTPUT}.depn.grd0${i}'

CXR_AVG_FILE_RULE='${CXR_ROOT_OUTPUT}.avrg.grd0${i}'

# We create the ASCII version of thefiles in the aqmfad directory
# All rules start with the CXR_AQMFAD_OUTPUT_DIR and end with ${CXR_ASC_EXT}
CXR_AVG_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW}.avrg.grd0${i}.${CXR_ASC_EXT}'

# Landuse ASCII File is provided by MM5, we will convert it to binary
CXR_LANDUSE_ASC_FILE_RULE='${CXR_LANDUSE_DIR}/terrain_domain${i}_${CXR_MET_PROJECT}_lucamx.asce'

# Terrain elevation for aqmfad
CXR_TERRAIN_ASC_FILE_RULE='${CXR_LANDUSE_DIR}/terrain_domain${i}_${CXR_MET_PROJECT}_terrcamx.asce'

CXR_PRESSURE_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_zp_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_WIND_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_uv_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_TEMPERATURE_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_tp_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_VAPOR_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_qa_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_CLOUD_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_cr_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_K_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_kv_CMAQ_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'		

# Aqmfad options
# This is treated like an array
#CXR_RUN_AQMFAD_ON_GRID="1 2 3"
CXR_RUN_AQMFAD_ON_GRID=""

################################################################################
# Geometry of simulation
################################################################################

CXR_MAP_PROJECTION=LAMBERT # (LAMBERT,POLAR,UTM,LATLON)

CXR_UTM_ZONE=0

# Floats
CXR_POLAR_LONGITUDE_POLE=0.        # deg (west<0south<0)
CXR_POLAR_LATITUDE_POLE=0.         # deg (west<0south<0)

CXR_LAMBERT_CENTER_LONGITUDE=-97.  # deg (west<0south<0)
CXR_LAMBERT_CENTER_LATITUDE=40.    # deg (west<0south<0)

CXR_LAMBERT_TRUE_LATITUDE1=45.     # deg (west<0south<0)
CXR_LAMBERT_TRUE_LATITUDE2=33.     # deg (west<0south<0)
	
################################################################################
# Grid definition
################################################################################

# How many grids are used?
CXR_NUMBER_OF_GRIDS=2

# Of course, more grids mean more settings down here

#Master grid (Floats)
CXR_MASTER_ORIGIN_XCOORD=-792.       # km or deg SW corner of cell(11)
CXR_MASTER_ORIGIN_YCOORD=-1656.       # km or deg SW corner of cell (11)

# Floats
CXR_MASTER_CELL_XSIZE=36.               # km or deg
CXR_MASTER_CELL_YSIZE=36.               # km or deg


CXR_MASTER_GRID_COLUMNS=68
CXR_MASTER_GRID_ROWS=68

CXR_NUMBER_OF_LAYERS[1]=16

# Grid 0 and 1 are dummies
CXR_NEST_MESHING_FACTOR[0]=-        
CXR_NEST_BEG_I_INDEX[0]=-          
CXR_NEST_END_I_INDEX[0]=-          
CXR_NEST_BEG_J_INDEX[0]=-          
CXR_NEST_END_J_INDEX[0]=-          
CXR_NUMBER_OF_LAYERS[0]=-

# This is a dummy because entries 1 are given by the MASTER settings
CXR_NEST_MESHING_FACTOR[1]=-        
CXR_NEST_BEG_I_INDEX[1]=-          
CXR_NEST_END_I_INDEX[1]=-          
CXR_NEST_BEG_J_INDEX[1]=-         
CXR_NEST_END_J_INDEX[1]=- 

# Number of layers set above         

# Second grid
CXR_NEST_MESHING_FACTOR[2]=3        # Relative to master grid
CXR_NEST_BEG_I_INDEX[2]=22          # Relative to master grid
CXR_NEST_END_I_INDEX[2]=51          # Relative to master grid
CXR_NEST_BEG_J_INDEX[2]=22          # Relative to master grid
CXR_NEST_END_J_INDEX[2]=58          # Relative to master grid
CXR_NUMBER_OF_LAYERS[2]=16
	


################################################################################
# Model options (Solver etc.)
################################################################################
CXR_DIAGNOSTIC_ERROR_CHECK=false    # True=will stop before 1st timestep
CXR_ADVECTION_SOLVER=PPM      # (PPM,BOTT)
CXR_CHEMISTRY_SOLVER=CMC      # (CMC,IEH,LSODE)

CXR_PROBING_TOOL=None     # (None,OSAT,PSAT,GOAT,APCA,DDM,PA,RTRAC)
CXR_CHEMISTRY=true
CXR_DRY_DEPOSITION=true
CXR_WET_DEPOSITION=true
CXR_STAGGERED_WINDS=true
CXR_GRIDDED_EMISSIONS=true
CXR_POINT_EMISSIONS=false
CXR_IGNORE_EMISSION_DATES=true

# Generate PIG relevant code
CXR_PLUME_IN_GRID=false
CXR_PIG_SUBMODEL=None     # (None,GREASD,IRON)


################################################################################
################################################################################
# Changes below this Comment are rather unusual
################################################################################
################################################################################

################################################################################
# Output specifications
################################################################################

CXR_AVERAGE_OUTPUT_3D=true
CXR_HDF_FORMAT_OUTPUT=false

################################################################################
# Chemical species
################################################################################

# First unset array
unset CXR_OUTPUT_SPECIES_NAMES

# Entry 0 is a dummy, we want our arrays to start with index 1
CXR_OUTPUT_SPECIES_NAMES[0]=-
CXR_OUTPUT_SPECIES_NAMES[1]=NO       
CXR_OUTPUT_SPECIES_NAMES[2]=NO2     
CXR_OUTPUT_SPECIES_NAMES[3]=O3       
CXR_OUTPUT_SPECIES_NAMES[4]=SO2      
CXR_OUTPUT_SPECIES_NAMES[5]=H2O2     
CXR_OUTPUT_SPECIES_NAMES[6]=HNO3      
CXR_OUTPUT_SPECIES_NAMES[7]=NH3      
CXR_OUTPUT_SPECIES_NAMES[8]=PNO3    
CXR_OUTPUT_SPECIES_NAMES[9]=PSO4    
CXR_OUTPUT_SPECIES_NAMES[10]=PNH4
CXR_OUTPUT_SPECIES_NAMES[11]=POA
CXR_OUTPUT_SPECIES_NAMES[12]=PEC
CXR_OUTPUT_SPECIES_NAMES[13]=FPRM
CXR_OUTPUT_SPECIES_NAMES[14]=CPRM
CXR_OUTPUT_SPECIES_NAMES[15]=CCRS
CXR_OUTPUT_SPECIES_NAMES[16]=FCRS
CXR_OUTPUT_SPECIES_NAMES[17]=SOA1
CXR_OUTPUT_SPECIES_NAMES[18]=SOA2
CXR_OUTPUT_SPECIES_NAMES[19]=SOA3
CXR_OUTPUT_SPECIES_NAMES[20]=SOA4
CXR_OUTPUT_SPECIES_NAMES[21]=SOA5

# Automatically count # species (subtract 1 for dummy)
CXR_NUMBER_OF_OUTPUT_SPECIES=$(( ${#CXR_OUTPUT_SPECIES_NAMES[@]} - 1 ))


################################################################################
# Name/Path of the CAMx.in file
################################################################################

# A rule that must be expanded
CXR_MODEL_CTRL_FILE_RULE='${CXR_STATE_DIR}/CAMx.${CXR_DATE_RAW}.in'

################################################################################
# Machine name
################################################################################

CXR_MACHINE=$(uname -n)

################################################################################
# The OPM and EXEC Settings are machine-dependent.
################################################################################ 
# Are we on a multicore system?
CXR_NUM_CORES=$(cxr_main_count_cores)

# Maximal number of parallel processes in the CAMxRunner
if [[ "$CXR_PARALLEL_PROCESSING" == true  ]]
then
	# By default, use the number of cores
	CXR_MAX_PARALLEL_PROCS=$CXR_NUM_CORES
else
	# Non-Parallel use 1 process
	CXR_MAX_PARALLEL_PROCS=1
fi

# This can be either None, OMP or MPI (MPI is not currently implemented). OMP is recommended.
# the CAMx executable mifust provide this!
CXR_PARALLEL_PARADIGM=OMP

################################################################################
# OpenMP settings
################################################################################
# Switch on OMP
# If num_cores=1, OMP is turned off

# Number of CPUS
export NCPUS=$CXR_NUM_CORES

# Set number of OpenMP threads (usually equals CPU number)
export OMP_NUM_THREADS=$CXR_NUM_CORES

# Per Thread stack size. Can lead to problems if both too large or to small...
export MPSTKZ=128M

################################################################################
# Determine name of executable.
################################################################################

# If you need another executable name,
# replace this function call by a constant.
# The advance of the function is that it makes sure the executable is present.
CXR_MODEL_EXEC=$(get_model_exec)

