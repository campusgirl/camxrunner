#!/usr/bin/env bash
#
# Runner script for CAMx 4.42/4.51 - Configuration. 
# See http://people.web.psi.ch/oderbolz/CAMxRunner
# 
# Leave the next line intact, it is used for change detection
# Version: $Id$ 
#
# Written by Daniel C. Oderbolz (CAMxRunner@psi.ch),
# Released under the Creative Commons "Attribution-Share Alike 2.5 Switzerland"
# License, (http://creativecommons.org/licenses/by-sa/2.5/ch/deed.en)
################################################################################
# Who	When		What
# dco 	19.02.2009	Created from base.conf. This is an example run for the Patras group
################################################################################
# TODO: 
################################################################################
#
# All Variables (except system variables like OMP*) names start with CXR_
#
# Output File names end with OUTPUT_FILE
# Input File names end with INPUT_FILE
# Directories with _DIR
# Output directories with OUTPUT_DIR
# Executables with _EXEC
#
# Arrays of files are called OUTPUT_ARR_FILES AND INPUT_ARR_FILES
#
# If a variable is called CXR_SOMETHING_RULE
# it is expanded automatically to yield CXR_SOMETHING.
#
# Really red the documentation on Rules (http://people.web.psi.ch/oderbolz/CAMxRunner#FileRules) 
# before using them.
#
# Strings which are used as Floating point numbers, but are integer, need a trailing .
#
# Arrays must have an index 0 with a Dummy entry, we work in Fortran Land here.
#
# Also, entries in arrays which contain spaces must be protected by
# single (') quotes, because arrays are exported as space separated list

################################################################################
# Model Version (CXR_MODEL_VERSION) and name (CXR_MODEL) is set automatically by the link name!!
################################################################################

################################################################################
# Notification options
################################################################################
CXR_MAILADDR=CAMxRunner@psi.ch
CXR_SMSNR=0765888275
CXR_SMSPROVIDER=sms.switch.ch
CXR_SMSADDR=${CXR_SMSNR}@${CXR_SMSPROVIDER}

#If this Variable is true, SMS will be sent
CXR_SEND_SMS=false

# This string can be formatted as needed.
# I use it to create a row for a table in our Wiki.
# It will be output at the end of the log (expanded)
#
# Make sure, control sequences like \n are double-escaped (\\n)
# because the expansion otherwise removes the sequence

CXR_FINISH_MESSAGE_RULE='Please copy this into https://wiki.intranet.psi.ch/twiki/LAC/CAMxRuns \\n \| $(date +"%Y/%m/%d") \| ${USER} \| ${CXR_STATUS} \| ${CXR_RUN} \| ${CXR_START_DATE} \| ${CXR_STOP_DATE} \| ${CXR_BASE_DIR} \| http://people.web.psi.ch/oderbolz/CAMx/conf/$(basename "$CXR_CONFIG") \| http://people.web.psi.ch/oderbolz/CAMx/log/$(basename "$CXR_LOG") \| \\n'


################################################################################
# Timespan of simulation
################################################################################

# The Start of the simulation in YYYY-MM-DD notation
CXR_START_DATE=2003-04-12

# The Stop of the simulation in YYYY-MM-DD notation
CXR_STOP_DATE=2003-04-12

# Must be in HHMI Format, applies just to first and last day, all others are from 0000 to 2400
CXR_START_HOUR_FIRST_DAY=0000
CXR_STOP_HOUR_LAST_DAY=2400

# Timezone (0=UTC,5=EST,6=CST,7=MST,8=PST)
CXR_TIME_ZONE=5

# The Simulation intervals in Minutes
CXR_MAXIMUM_TIMESTEP=10
CXR_MET_INPUT_FREQUENCY=60
CXR_EMS_INPUT_FREQUENCY=60
CXR_OUTPUT_FREQUENCY=60

################################################################################
# Geometry of simulation
################################################################################

CXR_MAP_PROJECTION=LAMBERT # (LAMBERT,POLAR,UTM,LATLON)

########################################
# Floats
########################################

# Needed for LAMBERT only
CXR_LAMBERT_CENTER_LONGITUDE=-99.0774   # deg (west<0south<0)
CXR_LAMBERT_CENTER_LATITUDE=19.3676    # deg (west<0south<0)
CXR_LAMBERT_TRUE_LATITUDE1=30.     # deg (west<0south<0)
CXR_LAMBERT_TRUE_LATITUDE2=60.     # deg (west<0south<0)

# Needed for UTM only
CXR_UTM_ZONE=0

# Needed for POLAR only
CXR_POLAR_LONGITUDE_POLE=0.        # deg (west<0south<0)
CXR_POLAR_LATITUDE_POLE=0.         # deg (west<0south<0)

	
################################################################################
# Grid definition
################################################################################

# How many grids are used?
CXR_NUMBER_OF_GRIDS=1

# Of course, more grids mean more settings down here

#Master grid (Floats)
CXR_MASTER_ORIGIN_XCOORD=-78.       # km or deg SW corner of cell(11)
CXR_MASTER_ORIGIN_YCOORD=-78.       # km or deg SW corner of cell (11)

# Floats
CXR_MASTER_CELL_XSIZE=3.               # km or deg
CXR_MASTER_CELL_YSIZE=3.               # km or deg


CXR_MASTER_GRID_COLUMNS=52
CXR_MASTER_GRID_ROWS=52

CXR_NUMBER_OF_LAYERS[1]=15

# Grid 0 and 1 are dummies
CXR_NEST_MESHING_FACTOR[0]=-
CXR_NEST_BEG_I_INDEX[0]=-
CXR_NEST_END_I_INDEX[0]=-
CXR_NEST_BEG_J_INDEX[0]=-
CXR_NEST_END_J_INDEX[0]=-
CXR_NUMBER_OF_LAYERS[0]=-

# This is a dummy because entries 1 are given by the MASTER settings
CXR_NEST_MESHING_FACTOR[1]=-
CXR_NEST_BEG_I_INDEX[1]=-
CXR_NEST_END_I_INDEX[1]=-
CXR_NEST_BEG_J_INDEX[1]=-
CXR_NEST_END_J_INDEX[1]=-

# Number of layers set above

# Second grid
CXR_NEST_MESHING_FACTOR[2]=3        # Relative to master grid
CXR_NEST_BEG_I_INDEX[2]=51          # Relative to master grid
CXR_NEST_END_I_INDEX[2]=74          # Relative to master grid
CXR_NEST_BEG_J_INDEX[2]=32          # Relative to master grid
CXR_NEST_END_J_INDEX[2]=49          # Relative to master grid
CXR_NUMBER_OF_LAYERS[2]=14
	
# Third grid
CXR_NEST_MESHING_FACTOR[3]=9        # Relative to master grid
CXR_NEST_BEG_I_INDEX[3]=55          # Relative to master grid
CXR_NEST_END_I_INDEX[3]=68          # Relative to master grid
CXR_NEST_BEG_J_INDEX[3]=35          # Relative to master grid
CXR_NEST_END_J_INDEX[3]=44          # Relative to master grid
CXR_NUMBER_OF_LAYERS[3]=14

################################################################################
# Model options (Solver etc.)
################################################################################
CXR_DIAGNOSTIC_ERROR_CHECK=false    # True=will stop before 1st timestep
CXR_ADVECTION_SOLVER=PPM      # (PPM,BOTT)
CXR_CHEMISTRY_SOLVER=CMC      # (CMC,IEH,LSODE)

CXR_PROBING_TOOL=None     # (None,OSAT,PSAT,GOAT,APCA,DDM,PA,RTRAC)
CXR_CHEMISTRY=true
CXR_DRY_DEPOSITION=true
CXR_WET_DEPOSITION=true
CXR_STAGGERED_WINDS=true
CXR_GRIDDED_EMISSIONS=true
CXR_POINT_EMISSIONS=true
CXR_IGNORE_EMISSION_DATES=true

# Generate PIG relevant code
CXR_PLUME_IN_GRID=false
CXR_PIG_SUBMODEL=None     # (None,GREASD,IRON)

# Floats
CXR_PIG_MAX_PUFF_LENGTH=2000.  # Meters
CXR_PIG_MAX_PUFF_AGE=12.  # Hours


################################################################################
# Chemical and aerosol Mechanism
################################################################################

# Here choose between these possibilities (taken from the CAMx Guide)
# 3 (Carbon Bond IV - Gery et al. 1989)
# 1 (same as above, but with reactive chlorine chemistry - Tanaka et al., 2000)
# 4 (Carbon Bond IV - CB4)
# 5 (SAPRC99, Carter, 2000)
# 6 (Carbon Bond version 2005 - CB05) - Default for CAMx 4.51
# 10 (User defined)

CXR_CHEMICAL_MECHANISM=5

# Choose between 
# CF for (Coarse fine) 
# CF+hg (Coarse fine with mercury)
# CMU (Carnegie Mellon sectional model) 
# NONE (No Aerosols)
# Aerosol Chemistry is currently only supported with mechanisms 4 and 6 - CAMxRunner will complain but try anyway
CXR_AEROSOL_MECHANISM=CMU

# The CAMxRunner determines the name of the chemparam file automatically
# but you can overwrite this behavior by setting this parameter
# In this case it uses your setting
# CXR_CHEMPARAM_INPUT_FILE=


################################################################################
# Labels
################################################################################
CXR_MET_PROJECT=uw3
CXR_MET_SCENARIO=s151

CXR_EMMISS_PROJECT=${CXR_MET_PROJECT}
CXR_EMMISS_SCENARIO=sem050

CXR_CAMX_SCENARIO=MCMA_V74_SEMIvol_emissx4
CXR_CAMX_CUSTOMER=bafu3

CXR_STATION_LABEL=NABEL

################################################################################
# Directories 
# Attention: Put no variables in directory names that are not yet set here!
# E. g. any variable containing dates (like simulation year) will fail to expand!
################################################################################

CXR_BASE_DIR=/mnt/other/lacfs02/oderbolz/CAMxRuns/Runs/${CXR_RUN}
CXR_INPUT_DIR=${CXR_BASE_DIR}/Inputs

CXR_EMISSION_DIR=${CXR_INPUT_DIR}/prep/area
CXR_PTSRCE_DIR=${CXR_INPUT_DIR}/prep/point

# This is the main output directory
CXR_OUTPUT_DIR=${CXR_BASE_DIR}/Outputs

# Probing output dirs
CXR_PA_OUTPUT_DIR=${CXR_OUTPUT_DIR}/PA
CXR_DDM_OUTPUT_DIR=${CXR_OUTPUT_DIR}/DDM
CXR_RT_OUTPUT_DIR=${CXR_OUTPUT_DIR}/RT
CXR_SA_OUTPUT_DIR=${CXR_OUTPUT_DIR}/SA

CXR_AQMFAD_OUTPUT_DIR=${CXR_OUTPUT_DIR}/aqmfad
CXR_STATION_OUTPUT_DIR=${CXR_OUTPUT_DIR}/Nabel

# The directory where the executables lie
CXR_BIN_DIR=${CXR_RUN_DIR}/bin

#Base path to find the CAMx executable
CXR_MODEL_BIN_DIR=${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}

################################################################################
# CAMxRunner specific settings
################################################################################

################################################################################
# If you want to disable modules of the CAMxRunner, do it here
################################################################################

# Set this to false to disable CAMx in this run
CXR_RUN_MODEL=true

# This string contains the space-separated module names of
# unwanted daily preprocessors like "create_emissions"
# If "skip_all" is given, all daily preprocessors are skipped

CXR_DISABLED_DAILY_PREPROC="skip_all"

# This string contains the space-separated  module names of
# unwanted one-time preprocessors.
# If "skip_all" is given, all one-time preprocessors are skipped

CXR_DISABLED_ONCE_PREPROC="skip_all"

# This string contains the space-separated module names of
# unwanted daily postprocessors like "prepare_output_dir convert_output"
# If "skip_all" is given, all daily postprocessors are skipped
	
CXR_DISABLED_DAILY_POSTPROC="skip_all"

# This string contains the space-separated module names of
# unwanted one-time postprocessors.
# If "skip_all" is given, all one-time postprocessors are skipped

export  CXR_DISABLED_ONCE_POSTPROC="skip_all"

################################################################################
# Preprocessors
################################################################################	

########################################
# albedo_haze_ozone (AHOMAP)
########################################

# Rules to generate the URL to get the ozone column (works starting 2004)
CXR_AHOMAP_OZONE_COLUMN_FILE_RULE='L3_ozone_omi_${CXR_DATE_RAW}.txt'
# Nesting of rule - attention with the quoting
CXR_AHOMAP_OZONE_COLUMN_URL_RULE='ftp://toms.gsfc.nasa.gov/pub/omi/data/ozone/Y${CXR_YEAR}/'${CXR_AHOMAP_OZONE_COLUMN_FILE_RULE}

# This is where the files go
CXR_AHOMAP_OZONE_COLUMN_DIR=${CXR_PREPROCESSOR_ONCE_INPUT_DIR}/albedo_haze_ozone/ozone_column

# Should AHOMAP consider snow (boolean)
CXR_AHOMAP_SNOW=false

########################################
# photolysis_rates (TUV)
########################################

# Choose between these 2:
# 1 : pseudo-spherical two-stream delta-Eddington (ps2str.f) - fast
# 2 : discrete ordinates method (slower but more accurate)
CXR_TUV_RADIATIVE_TRANSFER_SCHEME=1

# This is a list of reaction numbers that need Photolysis rates 
# This depends on the chemistry parameters file!

# Take this for CBM05
CXR_TUV_REACTION_NUMBERS="100, 122, 121, 102, 101, 125, 89, 126, 127, 128, 129, 86, 91, 90, 85, 130, 84, 131, 70"

# take this for CB4 with updated isoprene chemistry (CAMx mechanisms 1, 3 and 4)
#CXR_TUV_REACTION_NUMBERS="4, 15, 16, 2, 17, 56"

CXR_TUV_NO_OF_REACTIONS=$(cxr_common_count_delimited_elements "$CXR_TUV_REACTION_NUMBERS" ",")

# This is stuff that we need to configure the CAMx compilation (camx.prm) and
# TUV operation. (TUV layer definition to calculate look-up table)
CXR_NOZN=5
CXR_NALB=5
CXR_NHAZ=3
CXR_NRUF=9
CXR_NHGHT=11
CXR_NZEN=10
CXR_NLU=11

# Now we need to indicate a height above ground for each of the CXR_NHGHT levels
CXR_TUV_HEIGHTS="0. 0.15 0.35 0.60 1.00 2.00 3.00 4.00 6.00 8.00 10.0"

########################################
# topconc
########################################

# This is the IDL procedure for the topconc generation
CXR_TOPCONC_PROC_INPUT_FILE=${CXR_PREPROCESSOR_ONCE_INPUT_DIR}/topconc/topconc.pro

########################################
# initial_conditions
########################################

# This is the IDL procedure for the initial_conditions generation
CXR_IC_PROC_INPUT_FILE=${CXR_PREPROCESSOR_ONCE_INPUT_DIR}/initial_conditions/camxinit.pro

########################################
# boundary_conditions
########################################

# This is the IDL procedure for the boundary_conditions generation
CXR_BC_PROC_INPUT_FILE=${CXR_PREPROCESSOR_DAILY_INPUT_DIR}/boundary_conditions/camxbound.pro

########################################
# split Emissions (PMCAMx 2008 only)
########################################

CXR_SPLIT_EMISSIONS_INPUT_FILE_RULE=''
CXR_SPLIT_EMISSIONS_OUTPUT_FILE_RULE=''

################################################################################
# Postprocessors
################################################################################



########################################
# extract_station_data
########################################	

# This is the IDL procedure for the extraction
# Because it is not executable, we treat it as an input file
CXR_STATION_PROC_INPUT_FILE=${CXR_POSTPROCESSOR_DAILY_INPUT_DIR}/extract_station_data/extract_nabel_stations.pro

# Do we run processing parallel?
# Means that modules marked as parallel will also run parallel.
# Modules not marked parallel will never be ren parallel.
CXR_PARALLEL_PROCESSING=false

# Maximal number of parallel processes set later

################################################################################
# Rules for filenames (See http://people.web.psi.ch/oderbolz/CAMxRunner#FileRules)
#
# There are more filerules in the Probing sections of this file
#
# These ABSOLUTELY need 'single quotes' around them, otherwise the shell expands them here!
################################################################################

################## Grid independent ############################################

# Input Preparation ############################################################


# Input ########################################################################

# The meteo files might have a different name on startup
CXR_DAY_METEO_FIRST_DAY_RULE='${CXR_DAY}_s'

CXR_PHOTOLYIS_RATES_FILE_RULE='${CXR_INPUT_DIR}/rate/rate.${CXR_YEAR}102.do.mech3'
CXR_INITIAL_CONDITIONS_FILE_RULE='${CXR_INPUT_DIR}/init/init.${CXR_YEAR}.4rpos.3.15.mcma.saprc'
CXR_BOUNDARY_CONDITIONS_FILE_RULE='${CXR_INPUT_DIR}/init/gbndr.${CXR_YEAR}.4rpos.3.15.mcma.saprc'
CXR_TOP_CONCENTRATIONS_FILE_RULE='${CXR_INPUT_DIR}/init/topc.${CXR_YEAR}.4rpos.3.15.mcma.saprc'
CXR_ALBEDO_HAZE_OZONE_FILE_RULE='${CXR_INPUT_DIR}/ahoz/ahoz.${CXR_YEAR}102.4rpos.3.ld'

CXR_POINT_SOURCES_FILE_RULE='${CXR_PTSRCE_DIR}/P2004_PM.mm5_CMU_shift_emiss3.semibase'

CXR_MASTER_GRID_RESTART_FILE_RULE='${CXR_OUTPUT_DIR}/4rpos.baseE.101.$CXR_CAMX_SCENARIO.inst.2'
CXR_NESTED_GRID_RESTART_FILE_RULE=''

# More restart rules in the probing sections later

CXR_PIG_RESTART_FILE_RULE=''

CXR_ROOT_OUTPUT_FILE_RULE='${CXR_OUTPUT_DIR}/4rpos.baseE.102.MCMA_V74_SEMIvol_emissx4'

# File Roots for probing
CXR_PA_ROOT_OUTPUT_FILE_RULE='$CXR_PA_OUTPUT_DIR/${CXR_RUN}.${CXR_YEAR_S}${CXR_MONTH}${CXR_DAY}'

CXR_DDM_ROOT_OUTPUT_FILE_RULE='$CXR_DDM_OUTPUT_DIR/${CXR_RUN}.${CXR_YEAR_S}${CXR_MONTH}${CXR_DAY}'
CXR_RT_ROOT_OUTPUT_FILE_RULE='$CXR_RT_OUTPUT_DIR/${CXR_RUN}.${CXR_YEAR_S}${CXR_MONTH}${CXR_DAY}'
CXR_SA_ROOT_OUTPUT_FILE_RULE='$CXR_SA_OUTPUT_DIR/${CXR_RUN}.${CXR_YEAR_S}${CXR_MONTH}${CXR_DAY}'

# These are used 
#	* to prevent overwriting of existing files 
#	* the creation of the aqmfad directory
#	* to convert the binary output files
#	These are dependent on another rule - check the quoting!
CXR_DIAG_FILE_RULE=${CXR_ROOT_OUTPUT_FILE_RULE}'.diag'
CXR_FINST_FILE_RULE=${CXR_ROOT_OUTPUT_FILE_RULE}'.finst'
CXR_INST_FILE_RULE=${CXR_ROOT_OUTPUT_FILE_RULE}'.inst'
CXR_MASS_FILE_RULE=${CXR_ROOT_OUTPUT_FILE_RULE}'.mass'
CXR_OUT_FILE_RULE=${CXR_ROOT_OUTPUT_FILE_RULE}'.out'

################## NABEL (Station dependent)#####################################

# The local variable $station will be replaced by the actual name of the station in question
CXR_STATION_FILE_RULE='${CXR_STATION_OUTPUT_DIR}/${CXR_RUN}.${CXR_YEAR_S}${CXR_MONTH}${CXR_DAY}_${station}.dat'

# This is the name of the cumulated file
CXR_CUMULATIVE_STATION_FILE_RULE='${CXR_STATION_OUTPUT_DIR}/${CXR_RUN}.${CXR_YEAR_S}${CXR_MONTH}_${station}-complete.dat'

################## Grid spcecific ##############################################

# These NEED the variable ${i} somewhere (the grid number)

# Input Preparation ############################################################

# Emission (classical)
CXR_EMISSION_ASC_FILE_RULE='${CXR_EMISSION_SOURCE_DIR}/${CXR_DATE_RAW}/${CXR_EMMISS_SCENARIO}/camx_emiss_domain${i}_${CXR_MET_PROJECT}_${CXR_EMMISS_SCENARIO}_${CXR_DATE_RAW}.asc'

# Input ########################################################################

#Landuse
CXR_LANDUSE_FILE_RULE='${CXR_INPUT_DIR}/init/mcma_landuse.dat'

# Pressure
CXR_PRESSURE_FILE_RULE='${CXR_INPUT_DIR}/pres/c${CXR_YEAR}${CXR_MONTH}${CXR_DAY}.u_md3.zp'

# Wind
CXR_WIND_FILE_RULE='${CXR_INPUT_DIR}/wind/c${CXR_YEAR}${CXR_MONTH}${CXR_DAY}.u_md3.uv'

# Temperature
CXR_TEMPERATURE_FILE_RULE='${CXR_INPUT_DIR}/temp/c${CXR_YEAR}${CXR_MONTH}${CXR_DAY}.u_md3.tp'

# Vapor
CXR_VAPOR_FILE_RULE='${CXR_INPUT_DIR}/wvap/c${CXR_YEAR}${CXR_MONTH}${CXR_DAY}.u_md3.qa'

# Cloud
CXR_CLOUD_FILE_RULE='${CXR_INPUT_DIR}/clranew/c20030412.u_md3.cr'

# Vertical K
CXR_K_FILE_RULE='${CXR_INPUT_DIR}/vdif/c${CXR_YEAR}${CXR_MONTH}${CXR_DAY}.u_md3_cmaq.kv'
 
# Emissions
CXR_EMISSION_FILE_RULE='${CXR_EMISSION_DIR}/A2004_PM.mm5_CMU_shift_emiss3.semibase'

# Output #######################################################################

#Deposition file (dependency -> quoting!)
CXR_DEPN_FILE_RULE=${CXR_ROOT_OUTPUT_FILE_RULE}'.depn.grd0${i}'

# The actual average file (THE OUTPUT) (dependency -> quoting!)
CXR_AVG_FILE_RULE=${CXR_ROOT_OUTPUT_FILE_RULE}'.avrg.grd0${i}'  

# We create the ASCII version of thefiles in the aqmfad directory      
# All rules start with the CXR_AQMFAD_OUTPUT_DIR and end with ${CXR_ASC_EXT}
CXR_AVG_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/${CXR_RUN}.${CXR_DATE_RAW}.avrg.grd0${i}.${CXR_ASC_EXT}'

# Landuse ASCII File is provided by MM5, we will convert it to binary
CXR_LANDUSE_ASC_FILE_RULE='${CXR_LANDUSE_DIR}/terrain_domain${i}_${CXR_MET_PROJECT}_lucamx.asce'

# Terrain elevation for aqmfad
CXR_TERRAIN_ASC_FILE_RULE='${CXR_LANDUSE_DIR}/terrain_domain${i}_${CXR_MET_PROJECT}_terrcamx.asce'

CXR_PRESSURE_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_zp_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_WIND_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_uv_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_TEMPERATURE_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_tp_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_VAPOR_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_qa_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_CLOUD_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_cr_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'
CXR_K_ASC_FILE_RULE='${CXR_AQMFAD_OUTPUT_DIR}/camx_kv_CMAQ_domain${i}_${CXR_MET_PROJECT}_${CXR_MET_SCENARIO}:${CXR_YEAR}-${CXR_MONTH}-${CXR_DAY_METEO}.${CXR_ASC_EXT}'		

# Aqmfad options
# This is treated like an array
#CXR_RUN_AQMFAD_ON_GRID="1 2 3"
CXR_RUN_AQMFAD_ON_GRID="3"




################################################################################
################################################################################
# Changes below this Comment are rather unusual
################################################################################
################################################################################

################################################################################
# Emission settings 
################################################################################


################################################################################
# Output specifications
################################################################################

CXR_AVERAGE_OUTPUT_3D=true
CXR_HDF_FORMAT_OUTPUT=false

################################################################################
# Chemical species
################################################################################

# First unset array
unset CXR_OUTPUT_SPECIES_NAMES

# Entry 0 is a dummy, we want our arrays to start with index 1
CXR_OUTPUT_SPECIES_NAMES[0]=-
CXR_OUTPUT_SPECIES_NAMES[1]=NO
CXR_OUTPUT_SPECIES_NAMES[2]=NO2
CXR_OUTPUT_SPECIES_NAMES[3]=O3
CXR_OUTPUT_SPECIES_NAMES[4]=PAN
CXR_OUTPUT_SPECIES_NAMES[5]=PAN2
CXR_OUTPUT_SPECIES_NAMES[6]=MPAN
CXR_OUTPUT_SPECIES_NAMES[7]=PBZN
CXR_OUTPUT_SPECIES_NAMES[8]=NPHE
CXR_OUTPUT_SPECIES_NAMES[9]=RNO3
CXR_OUTPUT_SPECIES_NAMES[10]=CRES
CXR_OUTPUT_SPECIES_NAMES[11]=DCB2
CXR_OUTPUT_SPECIES_NAMES[12]=DCB3
CXR_OUTPUT_SPECIES_NAMES[13]=HNO4
CXR_OUTPUT_SPECIES_NAMES[14]=BALD
CXR_OUTPUT_SPECIES_NAMES[15]=HONO
CXR_OUTPUT_SPECIES_NAMES[16]=XN
CXR_OUTPUT_SPECIES_NAMES[17]=HCHO
CXR_OUTPUT_SPECIES_NAMES[18]=CCHO
CXR_OUTPUT_SPECIES_NAMES[19]=RCHO
CXR_OUTPUT_SPECIES_NAMES[20]=BACL
CXR_OUTPUT_SPECIES_NAMES[21]=PROD
CXR_OUTPUT_SPECIES_NAMES[22]=DCB1
CXR_OUTPUT_SPECIES_NAMES[23]=PHEN
CXR_OUTPUT_SPECIES_NAMES[24]=ISOP
CXR_OUTPUT_SPECIES_NAMES[25]=ISPD
CXR_OUTPUT_SPECIES_NAMES[26]=MVK
CXR_OUTPUT_SPECIES_NAMES[27]=METH
CXR_OUTPUT_SPECIES_NAMES[28]=MGLY
CXR_OUTPUT_SPECIES_NAMES[29]=GLY
CXR_OUTPUT_SPECIES_NAMES[30]=TERP
CXR_OUTPUT_SPECIES_NAMES[31]=BPIN
CXR_OUTPUT_SPECIES_NAMES[32]=LIMO
CXR_OUTPUT_SPECIES_NAMES[33]=MONO
CXR_OUTPUT_SPECIES_NAMES[34]=SESQ
CXR_OUTPUT_SPECIES_NAMES[35]=HNO3
CXR_OUTPUT_SPECIES_NAMES[36]=HO2H
CXR_OUTPUT_SPECIES_NAMES[37]=HC2H
CXR_OUTPUT_SPECIES_NAMES[38]=CO2H
CXR_OUTPUT_SPECIES_NAMES[39]=CO3H
CXR_OUTPUT_SPECIES_NAMES[40]=RC2H
CXR_OUTPUT_SPECIES_NAMES[41]=RC3H
CXR_OUTPUT_SPECIES_NAMES[42]=ACET
CXR_OUTPUT_SPECIES_NAMES[43]=MEK
CXR_OUTPUT_SPECIES_NAMES[44]=MEOH
CXR_OUTPUT_SPECIES_NAMES[45]=COOH
CXR_OUTPUT_SPECIES_NAMES[46]=ROOH
CXR_OUTPUT_SPECIES_NAMES[47]=CO
CXR_OUTPUT_SPECIES_NAMES[48]=ETHE
CXR_OUTPUT_SPECIES_NAMES[49]=ALK1
CXR_OUTPUT_SPECIES_NAMES[50]=ALK2
CXR_OUTPUT_SPECIES_NAMES[51]=ALK3
CXR_OUTPUT_SPECIES_NAMES[52]=ALK4
CXR_OUTPUT_SPECIES_NAMES[53]=ALK5
CXR_OUTPUT_SPECIES_NAMES[54]=ARO1
CXR_OUTPUT_SPECIES_NAMES[55]=ARO2
CXR_OUTPUT_SPECIES_NAMES[56]=OLE1
CXR_OUTPUT_SPECIES_NAMES[57]=OLE2
CXR_OUTPUT_SPECIES_NAMES[58]=NXOY
CXR_OUTPUT_SPECIES_NAMES[59]=SO2
CXR_OUTPUT_SPECIES_NAMES[60]=SULF
CXR_OUTPUT_SPECIES_NAMES[61]=NH3
CXR_OUTPUT_SPECIES_NAMES[62]=CPO1
CXR_OUTPUT_SPECIES_NAMES[63]=CPO2
CXR_OUTPUT_SPECIES_NAMES[64]=CPO3
CXR_OUTPUT_SPECIES_NAMES[65]=CPO4
CXR_OUTPUT_SPECIES_NAMES[66]=CPO5
CXR_OUTPUT_SPECIES_NAMES[67]=CPO6
CXR_OUTPUT_SPECIES_NAMES[68]=CPO7
CXR_OUTPUT_SPECIES_NAMES[69]=CPO8
CXR_OUTPUT_SPECIES_NAMES[70]=CPO9
CXR_OUTPUT_SPECIES_NAMES[71]=CPO10
CXR_OUTPUT_SPECIES_NAMES[72]=COO1
CXR_OUTPUT_SPECIES_NAMES[73]=COO2
CXR_OUTPUT_SPECIES_NAMES[74]=COO3
CXR_OUTPUT_SPECIES_NAMES[75]=COO4
CXR_OUTPUT_SPECIES_NAMES[76]=COO5
CXR_OUTPUT_SPECIES_NAMES[77]=COO6
CXR_OUTPUT_SPECIES_NAMES[78]=COO7
CXR_OUTPUT_SPECIES_NAMES[79]=COO8
CXR_OUTPUT_SPECIES_NAMES[80]=COO9
CXR_OUTPUT_SPECIES_NAMES[81]=COO10
CXR_OUTPUT_SPECIES_NAMES[82]=CBS1
CXR_OUTPUT_SPECIES_NAMES[83]=CBS2
CXR_OUTPUT_SPECIES_NAMES[84]=CBS3
CXR_OUTPUT_SPECIES_NAMES[85]=CBS4
CXR_OUTPUT_SPECIES_NAMES[86]=CAS1
CXR_OUTPUT_SPECIES_NAMES[87]=CAS2
CXR_OUTPUT_SPECIES_NAMES[88]=CAS3
CXR_OUTPUT_SPECIES_NAMES[89]=CAS4
CXR_OUTPUT_SPECIES_NAMES[90]=APO1_1
CXR_OUTPUT_SPECIES_NAMES[91]=APO1_2
CXR_OUTPUT_SPECIES_NAMES[92]=APO1_3
CXR_OUTPUT_SPECIES_NAMES[93]=APO1_4
CXR_OUTPUT_SPECIES_NAMES[94]=APO1_5
CXR_OUTPUT_SPECIES_NAMES[95]=APO1_6
CXR_OUTPUT_SPECIES_NAMES[96]=APO1_7
CXR_OUTPUT_SPECIES_NAMES[97]=APO1_8
CXR_OUTPUT_SPECIES_NAMES[98]=APO1_9
CXR_OUTPUT_SPECIES_NAMES[99]=APO1_10
CXR_OUTPUT_SPECIES_NAMES[100]=APO2_1
CXR_OUTPUT_SPECIES_NAMES[101]=APO2_2
CXR_OUTPUT_SPECIES_NAMES[102]=APO2_3
CXR_OUTPUT_SPECIES_NAMES[103]=APO2_4
CXR_OUTPUT_SPECIES_NAMES[104]=APO2_5
CXR_OUTPUT_SPECIES_NAMES[105]=APO2_6
CXR_OUTPUT_SPECIES_NAMES[106]=APO2_7
CXR_OUTPUT_SPECIES_NAMES[107]=APO2_8
CXR_OUTPUT_SPECIES_NAMES[108]=APO2_9
CXR_OUTPUT_SPECIES_NAMES[109]=APO2_10
CXR_OUTPUT_SPECIES_NAMES[110]=APO3_1
CXR_OUTPUT_SPECIES_NAMES[111]=APO3_2
CXR_OUTPUT_SPECIES_NAMES[112]=APO3_3
CXR_OUTPUT_SPECIES_NAMES[113]=APO3_4
CXR_OUTPUT_SPECIES_NAMES[114]=APO3_5
CXR_OUTPUT_SPECIES_NAMES[115]=APO3_6
CXR_OUTPUT_SPECIES_NAMES[116]=APO3_7
CXR_OUTPUT_SPECIES_NAMES[117]=APO3_8
CXR_OUTPUT_SPECIES_NAMES[118]=APO3_9
CXR_OUTPUT_SPECIES_NAMES[119]=APO3_10
CXR_OUTPUT_SPECIES_NAMES[120]=APO4_1
CXR_OUTPUT_SPECIES_NAMES[121]=APO4_2
CXR_OUTPUT_SPECIES_NAMES[122]=APO4_3
CXR_OUTPUT_SPECIES_NAMES[123]=APO4_4
CXR_OUTPUT_SPECIES_NAMES[124]=APO4_5
CXR_OUTPUT_SPECIES_NAMES[125]=APO4_6
CXR_OUTPUT_SPECIES_NAMES[126]=APO4_7
CXR_OUTPUT_SPECIES_NAMES[127]=APO4_8
CXR_OUTPUT_SPECIES_NAMES[128]=APO4_9
CXR_OUTPUT_SPECIES_NAMES[129]=APO4_10
CXR_OUTPUT_SPECIES_NAMES[130]=APO5_1
CXR_OUTPUT_SPECIES_NAMES[131]=APO5_2
CXR_OUTPUT_SPECIES_NAMES[132]=APO5_3
CXR_OUTPUT_SPECIES_NAMES[133]=APO5_4
CXR_OUTPUT_SPECIES_NAMES[134]=APO5_5
CXR_OUTPUT_SPECIES_NAMES[135]=APO5_6
CXR_OUTPUT_SPECIES_NAMES[136]=APO5_7
CXR_OUTPUT_SPECIES_NAMES[137]=APO5_8
CXR_OUTPUT_SPECIES_NAMES[138]=APO5_9
CXR_OUTPUT_SPECIES_NAMES[139]=APO5_10
CXR_OUTPUT_SPECIES_NAMES[140]=APO6_1
CXR_OUTPUT_SPECIES_NAMES[141]=APO6_2
CXR_OUTPUT_SPECIES_NAMES[142]=APO6_3
CXR_OUTPUT_SPECIES_NAMES[143]=APO6_4
CXR_OUTPUT_SPECIES_NAMES[144]=APO6_5
CXR_OUTPUT_SPECIES_NAMES[145]=APO6_6
CXR_OUTPUT_SPECIES_NAMES[146]=APO6_7
CXR_OUTPUT_SPECIES_NAMES[147]=APO6_8
CXR_OUTPUT_SPECIES_NAMES[148]=APO6_9
CXR_OUTPUT_SPECIES_NAMES[149]=APO6_10
CXR_OUTPUT_SPECIES_NAMES[150]=APO7_1
CXR_OUTPUT_SPECIES_NAMES[151]=APO7_2
CXR_OUTPUT_SPECIES_NAMES[152]=APO7_3
CXR_OUTPUT_SPECIES_NAMES[153]=APO7_4
CXR_OUTPUT_SPECIES_NAMES[154]=APO7_5
CXR_OUTPUT_SPECIES_NAMES[155]=APO7_6
CXR_OUTPUT_SPECIES_NAMES[156]=APO7_7
CXR_OUTPUT_SPECIES_NAMES[157]=APO7_8
CXR_OUTPUT_SPECIES_NAMES[158]=APO7_9
CXR_OUTPUT_SPECIES_NAMES[159]=APO7_10
CXR_OUTPUT_SPECIES_NAMES[160]=APO8_1
CXR_OUTPUT_SPECIES_NAMES[161]=APO8_2
CXR_OUTPUT_SPECIES_NAMES[162]=APO8_3
CXR_OUTPUT_SPECIES_NAMES[163]=APO8_4
CXR_OUTPUT_SPECIES_NAMES[164]=APO8_5
CXR_OUTPUT_SPECIES_NAMES[165]=APO8_6
CXR_OUTPUT_SPECIES_NAMES[166]=APO8_7
CXR_OUTPUT_SPECIES_NAMES[167]=APO8_8
CXR_OUTPUT_SPECIES_NAMES[168]=APO8_9
CXR_OUTPUT_SPECIES_NAMES[169]=APO8_10
CXR_OUTPUT_SPECIES_NAMES[170]=APO9_1
CXR_OUTPUT_SPECIES_NAMES[171]=APO9_2
CXR_OUTPUT_SPECIES_NAMES[172]=APO9_3
CXR_OUTPUT_SPECIES_NAMES[173]=APO9_4
CXR_OUTPUT_SPECIES_NAMES[174]=APO9_5
CXR_OUTPUT_SPECIES_NAMES[175]=APO9_6
CXR_OUTPUT_SPECIES_NAMES[176]=APO9_7
CXR_OUTPUT_SPECIES_NAMES[177]=APO9_8
CXR_OUTPUT_SPECIES_NAMES[178]=APO9_9
CXR_OUTPUT_SPECIES_NAMES[179]=APO9_10
CXR_OUTPUT_SPECIES_NAMES[180]=APO10_1
CXR_OUTPUT_SPECIES_NAMES[181]=APO10_2
CXR_OUTPUT_SPECIES_NAMES[182]=APO10_3
CXR_OUTPUT_SPECIES_NAMES[183]=APO10_4
CXR_OUTPUT_SPECIES_NAMES[184]=APO10_5
CXR_OUTPUT_SPECIES_NAMES[185]=APO10_6
CXR_OUTPUT_SPECIES_NAMES[186]=APO10_7
CXR_OUTPUT_SPECIES_NAMES[187]=APO10_8
CXR_OUTPUT_SPECIES_NAMES[188]=APO10_9
CXR_OUTPUT_SPECIES_NAMES[189]=APO10_10
CXR_OUTPUT_SPECIES_NAMES[190]=AOO1_1
CXR_OUTPUT_SPECIES_NAMES[191]=AOO1_2
CXR_OUTPUT_SPECIES_NAMES[192]=AOO1_3
CXR_OUTPUT_SPECIES_NAMES[193]=AOO1_4
CXR_OUTPUT_SPECIES_NAMES[194]=AOO1_5
CXR_OUTPUT_SPECIES_NAMES[195]=AOO1_6
CXR_OUTPUT_SPECIES_NAMES[196]=AOO1_7
CXR_OUTPUT_SPECIES_NAMES[197]=AOO1_8
CXR_OUTPUT_SPECIES_NAMES[198]=AOO1_9
CXR_OUTPUT_SPECIES_NAMES[199]=AOO1_10
CXR_OUTPUT_SPECIES_NAMES[200]=AOO2_1
CXR_OUTPUT_SPECIES_NAMES[201]=AOO2_2
CXR_OUTPUT_SPECIES_NAMES[202]=AOO2_3
CXR_OUTPUT_SPECIES_NAMES[203]=AOO2_4
CXR_OUTPUT_SPECIES_NAMES[204]=AOO2_5
CXR_OUTPUT_SPECIES_NAMES[205]=AOO2_6
CXR_OUTPUT_SPECIES_NAMES[206]=AOO2_7
CXR_OUTPUT_SPECIES_NAMES[207]=AOO2_8
CXR_OUTPUT_SPECIES_NAMES[208]=AOO2_9
CXR_OUTPUT_SPECIES_NAMES[209]=AOO2_10
CXR_OUTPUT_SPECIES_NAMES[210]=AOO3_1
CXR_OUTPUT_SPECIES_NAMES[211]=AOO3_2
CXR_OUTPUT_SPECIES_NAMES[212]=AOO3_3
CXR_OUTPUT_SPECIES_NAMES[213]=AOO3_4
CXR_OUTPUT_SPECIES_NAMES[214]=AOO3_5
CXR_OUTPUT_SPECIES_NAMES[215]=AOO3_6
CXR_OUTPUT_SPECIES_NAMES[216]=AOO3_7
CXR_OUTPUT_SPECIES_NAMES[217]=AOO3_8
CXR_OUTPUT_SPECIES_NAMES[218]=AOO3_9
CXR_OUTPUT_SPECIES_NAMES[219]=AOO3_10
CXR_OUTPUT_SPECIES_NAMES[220]=AOO4_1
CXR_OUTPUT_SPECIES_NAMES[221]=AOO4_2
CXR_OUTPUT_SPECIES_NAMES[222]=AOO4_3
CXR_OUTPUT_SPECIES_NAMES[223]=AOO4_4
CXR_OUTPUT_SPECIES_NAMES[224]=AOO4_5
CXR_OUTPUT_SPECIES_NAMES[225]=AOO4_6
CXR_OUTPUT_SPECIES_NAMES[226]=AOO4_7
CXR_OUTPUT_SPECIES_NAMES[227]=AOO4_8
CXR_OUTPUT_SPECIES_NAMES[228]=AOO4_9
CXR_OUTPUT_SPECIES_NAMES[229]=AOO4_10
CXR_OUTPUT_SPECIES_NAMES[230]=AOO5_1
CXR_OUTPUT_SPECIES_NAMES[231]=AOO5_2
CXR_OUTPUT_SPECIES_NAMES[232]=AOO5_3
CXR_OUTPUT_SPECIES_NAMES[233]=AOO5_4
CXR_OUTPUT_SPECIES_NAMES[234]=AOO5_5
CXR_OUTPUT_SPECIES_NAMES[235]=AOO5_6
CXR_OUTPUT_SPECIES_NAMES[236]=AOO5_7
CXR_OUTPUT_SPECIES_NAMES[237]=AOO5_8
CXR_OUTPUT_SPECIES_NAMES[238]=AOO5_9
CXR_OUTPUT_SPECIES_NAMES[239]=AOO5_10
CXR_OUTPUT_SPECIES_NAMES[240]=AOO6_1
CXR_OUTPUT_SPECIES_NAMES[241]=AOO6_2
CXR_OUTPUT_SPECIES_NAMES[242]=AOO6_3
CXR_OUTPUT_SPECIES_NAMES[243]=AOO6_4
CXR_OUTPUT_SPECIES_NAMES[244]=AOO6_5
CXR_OUTPUT_SPECIES_NAMES[245]=AOO6_6
CXR_OUTPUT_SPECIES_NAMES[246]=AOO6_7
CXR_OUTPUT_SPECIES_NAMES[247]=AOO6_8
CXR_OUTPUT_SPECIES_NAMES[248]=AOO6_9
CXR_OUTPUT_SPECIES_NAMES[249]=AOO6_10
CXR_OUTPUT_SPECIES_NAMES[250]=AOO7_1
CXR_OUTPUT_SPECIES_NAMES[251]=AOO7_2
CXR_OUTPUT_SPECIES_NAMES[252]=AOO7_3
CXR_OUTPUT_SPECIES_NAMES[253]=AOO7_4
CXR_OUTPUT_SPECIES_NAMES[254]=AOO7_5
CXR_OUTPUT_SPECIES_NAMES[255]=AOO7_6
CXR_OUTPUT_SPECIES_NAMES[256]=AOO7_7
CXR_OUTPUT_SPECIES_NAMES[257]=AOO7_8
CXR_OUTPUT_SPECIES_NAMES[258]=AOO7_9
CXR_OUTPUT_SPECIES_NAMES[259]=AOO7_10
CXR_OUTPUT_SPECIES_NAMES[260]=AOO8_1
CXR_OUTPUT_SPECIES_NAMES[261]=AOO8_2
CXR_OUTPUT_SPECIES_NAMES[262]=AOO8_3
CXR_OUTPUT_SPECIES_NAMES[263]=AOO8_4
CXR_OUTPUT_SPECIES_NAMES[264]=AOO8_5
CXR_OUTPUT_SPECIES_NAMES[265]=AOO8_6
CXR_OUTPUT_SPECIES_NAMES[266]=AOO8_7
CXR_OUTPUT_SPECIES_NAMES[267]=AOO8_8
CXR_OUTPUT_SPECIES_NAMES[268]=AOO8_9
CXR_OUTPUT_SPECIES_NAMES[269]=AOO8_10
CXR_OUTPUT_SPECIES_NAMES[270]=AOO9_1
CXR_OUTPUT_SPECIES_NAMES[271]=AOO9_2
CXR_OUTPUT_SPECIES_NAMES[272]=AOO9_3
CXR_OUTPUT_SPECIES_NAMES[273]=AOO9_4
CXR_OUTPUT_SPECIES_NAMES[274]=AOO9_5
CXR_OUTPUT_SPECIES_NAMES[275]=AOO9_6
CXR_OUTPUT_SPECIES_NAMES[276]=AOO9_7
CXR_OUTPUT_SPECIES_NAMES[277]=AOO9_8
CXR_OUTPUT_SPECIES_NAMES[278]=AOO9_9
CXR_OUTPUT_SPECIES_NAMES[279]=AOO9_10
CXR_OUTPUT_SPECIES_NAMES[280]=AOO10_1
CXR_OUTPUT_SPECIES_NAMES[281]=AOO10_2
CXR_OUTPUT_SPECIES_NAMES[282]=AOO10_3
CXR_OUTPUT_SPECIES_NAMES[283]=AOO10_4
CXR_OUTPUT_SPECIES_NAMES[284]=AOO10_5
CXR_OUTPUT_SPECIES_NAMES[285]=AOO10_6
CXR_OUTPUT_SPECIES_NAMES[286]=AOO10_7
CXR_OUTPUT_SPECIES_NAMES[287]=AOO10_8
CXR_OUTPUT_SPECIES_NAMES[288]=AOO10_9
CXR_OUTPUT_SPECIES_NAMES[289]=AOO10_10
CXR_OUTPUT_SPECIES_NAMES[290]=ABS1_1
CXR_OUTPUT_SPECIES_NAMES[291]=ABS1_2
CXR_OUTPUT_SPECIES_NAMES[292]=ABS1_3
CXR_OUTPUT_SPECIES_NAMES[293]=ABS1_4
CXR_OUTPUT_SPECIES_NAMES[294]=ABS1_5
CXR_OUTPUT_SPECIES_NAMES[295]=ABS1_6
CXR_OUTPUT_SPECIES_NAMES[296]=ABS1_7
CXR_OUTPUT_SPECIES_NAMES[297]=ABS1_8
CXR_OUTPUT_SPECIES_NAMES[298]=ABS1_9
CXR_OUTPUT_SPECIES_NAMES[299]=ABS1_10
CXR_OUTPUT_SPECIES_NAMES[300]=ABS2_1
CXR_OUTPUT_SPECIES_NAMES[301]=ABS2_2
CXR_OUTPUT_SPECIES_NAMES[302]=ABS2_3
CXR_OUTPUT_SPECIES_NAMES[303]=ABS2_4
CXR_OUTPUT_SPECIES_NAMES[304]=ABS2_5
CXR_OUTPUT_SPECIES_NAMES[305]=ABS2_6
CXR_OUTPUT_SPECIES_NAMES[306]=ABS2_7
CXR_OUTPUT_SPECIES_NAMES[307]=ABS2_8
CXR_OUTPUT_SPECIES_NAMES[308]=ABS2_9
CXR_OUTPUT_SPECIES_NAMES[309]=ABS2_10
CXR_OUTPUT_SPECIES_NAMES[310]=ABS3_1
CXR_OUTPUT_SPECIES_NAMES[311]=ABS3_2
CXR_OUTPUT_SPECIES_NAMES[312]=ABS3_3
CXR_OUTPUT_SPECIES_NAMES[313]=ABS3_4
CXR_OUTPUT_SPECIES_NAMES[314]=ABS3_5
CXR_OUTPUT_SPECIES_NAMES[315]=ABS3_6
CXR_OUTPUT_SPECIES_NAMES[316]=ABS3_7
CXR_OUTPUT_SPECIES_NAMES[317]=ABS3_8
CXR_OUTPUT_SPECIES_NAMES[318]=ABS3_9
CXR_OUTPUT_SPECIES_NAMES[319]=ABS3_10
CXR_OUTPUT_SPECIES_NAMES[320]=ABS4_1
CXR_OUTPUT_SPECIES_NAMES[321]=ABS4_2
CXR_OUTPUT_SPECIES_NAMES[322]=ABS4_3
CXR_OUTPUT_SPECIES_NAMES[323]=ABS4_4
CXR_OUTPUT_SPECIES_NAMES[324]=ABS4_5
CXR_OUTPUT_SPECIES_NAMES[325]=ABS4_6
CXR_OUTPUT_SPECIES_NAMES[326]=ABS4_7
CXR_OUTPUT_SPECIES_NAMES[327]=ABS4_8
CXR_OUTPUT_SPECIES_NAMES[328]=ABS4_9
CXR_OUTPUT_SPECIES_NAMES[329]=ABS4_10
CXR_OUTPUT_SPECIES_NAMES[330]=AAS1_1
CXR_OUTPUT_SPECIES_NAMES[331]=AAS1_2
CXR_OUTPUT_SPECIES_NAMES[332]=AAS1_3
CXR_OUTPUT_SPECIES_NAMES[333]=AAS1_4
CXR_OUTPUT_SPECIES_NAMES[334]=AAS1_5
CXR_OUTPUT_SPECIES_NAMES[335]=AAS1_6
CXR_OUTPUT_SPECIES_NAMES[336]=AAS1_7
CXR_OUTPUT_SPECIES_NAMES[337]=AAS1_8
CXR_OUTPUT_SPECIES_NAMES[338]=AAS1_9
CXR_OUTPUT_SPECIES_NAMES[339]=AAS1_10
CXR_OUTPUT_SPECIES_NAMES[340]=AAS2_1
CXR_OUTPUT_SPECIES_NAMES[341]=AAS2_2
CXR_OUTPUT_SPECIES_NAMES[342]=AAS2_3
CXR_OUTPUT_SPECIES_NAMES[343]=AAS2_4
CXR_OUTPUT_SPECIES_NAMES[344]=AAS2_5
CXR_OUTPUT_SPECIES_NAMES[345]=AAS2_6
CXR_OUTPUT_SPECIES_NAMES[346]=AAS2_7
CXR_OUTPUT_SPECIES_NAMES[347]=AAS2_8
CXR_OUTPUT_SPECIES_NAMES[348]=AAS2_9
CXR_OUTPUT_SPECIES_NAMES[349]=AAS2_10
CXR_OUTPUT_SPECIES_NAMES[350]=AAS3_1
CXR_OUTPUT_SPECIES_NAMES[351]=AAS3_2
CXR_OUTPUT_SPECIES_NAMES[352]=AAS3_3
CXR_OUTPUT_SPECIES_NAMES[353]=AAS3_4
CXR_OUTPUT_SPECIES_NAMES[354]=AAS3_5
CXR_OUTPUT_SPECIES_NAMES[355]=AAS3_6
CXR_OUTPUT_SPECIES_NAMES[356]=AAS3_7
CXR_OUTPUT_SPECIES_NAMES[357]=AAS3_8
CXR_OUTPUT_SPECIES_NAMES[358]=AAS3_9
CXR_OUTPUT_SPECIES_NAMES[359]=AAS3_10
CXR_OUTPUT_SPECIES_NAMES[360]=AAS4_1
CXR_OUTPUT_SPECIES_NAMES[361]=AAS4_2
CXR_OUTPUT_SPECIES_NAMES[362]=AAS4_3
CXR_OUTPUT_SPECIES_NAMES[363]=AAS4_4
CXR_OUTPUT_SPECIES_NAMES[364]=AAS4_5
CXR_OUTPUT_SPECIES_NAMES[365]=AAS4_6
CXR_OUTPUT_SPECIES_NAMES[366]=AAS4_7
CXR_OUTPUT_SPECIES_NAMES[367]=AAS4_8
CXR_OUTPUT_SPECIES_NAMES[368]=AAS4_9
CXR_OUTPUT_SPECIES_NAMES[369]=AAS4_10
CXR_OUTPUT_SPECIES_NAMES[370]=POC_1
CXR_OUTPUT_SPECIES_NAMES[371]=POC_2
CXR_OUTPUT_SPECIES_NAMES[372]=POC_3
CXR_OUTPUT_SPECIES_NAMES[373]=POC_4
CXR_OUTPUT_SPECIES_NAMES[374]=POC_5
CXR_OUTPUT_SPECIES_NAMES[375]=POC_6
CXR_OUTPUT_SPECIES_NAMES[376]=POC_7
CXR_OUTPUT_SPECIES_NAMES[377]=POC_8
CXR_OUTPUT_SPECIES_NAMES[378]=POC_9
CXR_OUTPUT_SPECIES_NAMES[379]=POC_10
CXR_OUTPUT_SPECIES_NAMES[380]=PEC_1
CXR_OUTPUT_SPECIES_NAMES[381]=PEC_2
CXR_OUTPUT_SPECIES_NAMES[382]=PEC_3
CXR_OUTPUT_SPECIES_NAMES[383]=PEC_4
CXR_OUTPUT_SPECIES_NAMES[384]=PEC_5
CXR_OUTPUT_SPECIES_NAMES[385]=PEC_6
CXR_OUTPUT_SPECIES_NAMES[386]=PEC_7
CXR_OUTPUT_SPECIES_NAMES[387]=PEC_8
CXR_OUTPUT_SPECIES_NAMES[388]=PEC_9
CXR_OUTPUT_SPECIES_NAMES[389]=PEC_10
CXR_OUTPUT_SPECIES_NAMES[390]=CRST_1
CXR_OUTPUT_SPECIES_NAMES[391]=CRST_2
CXR_OUTPUT_SPECIES_NAMES[392]=CRST_3
CXR_OUTPUT_SPECIES_NAMES[393]=CRST_4
CXR_OUTPUT_SPECIES_NAMES[394]=CRST_5
CXR_OUTPUT_SPECIES_NAMES[395]=CRST_6
CXR_OUTPUT_SPECIES_NAMES[396]=CRST_7
CXR_OUTPUT_SPECIES_NAMES[397]=CRST_8
CXR_OUTPUT_SPECIES_NAMES[398]=CRST_9
CXR_OUTPUT_SPECIES_NAMES[399]=CRST_10
CXR_OUTPUT_SPECIES_NAMES[400]=PH2O_1
CXR_OUTPUT_SPECIES_NAMES[401]=PH2O_2
CXR_OUTPUT_SPECIES_NAMES[402]=PH2O_3
CXR_OUTPUT_SPECIES_NAMES[403]=PH2O_4
CXR_OUTPUT_SPECIES_NAMES[404]=PH2O_5
CXR_OUTPUT_SPECIES_NAMES[405]=PH2O_6
CXR_OUTPUT_SPECIES_NAMES[406]=PH2O_7
CXR_OUTPUT_SPECIES_NAMES[407]=PH2O_8
CXR_OUTPUT_SPECIES_NAMES[408]=PH2O_9
CXR_OUTPUT_SPECIES_NAMES[409]=PH2O_10
CXR_OUTPUT_SPECIES_NAMES[410]=PCL_1
CXR_OUTPUT_SPECIES_NAMES[411]=PCL_2
CXR_OUTPUT_SPECIES_NAMES[412]=PCL_3
CXR_OUTPUT_SPECIES_NAMES[413]=PCL_4
CXR_OUTPUT_SPECIES_NAMES[414]=PCL_5
CXR_OUTPUT_SPECIES_NAMES[415]=PCL_6
CXR_OUTPUT_SPECIES_NAMES[416]=PCL_7
CXR_OUTPUT_SPECIES_NAMES[417]=PCL_8
CXR_OUTPUT_SPECIES_NAMES[418]=PCL_9
CXR_OUTPUT_SPECIES_NAMES[419]=PCL_10
CXR_OUTPUT_SPECIES_NAMES[420]=NA_1
CXR_OUTPUT_SPECIES_NAMES[421]=NA_2
CXR_OUTPUT_SPECIES_NAMES[422]=NA_3
CXR_OUTPUT_SPECIES_NAMES[423]=NA_4
CXR_OUTPUT_SPECIES_NAMES[424]=NA_5
CXR_OUTPUT_SPECIES_NAMES[425]=NA_6
CXR_OUTPUT_SPECIES_NAMES[426]=NA_7
CXR_OUTPUT_SPECIES_NAMES[427]=NA_8
CXR_OUTPUT_SPECIES_NAMES[428]=NA_9
CXR_OUTPUT_SPECIES_NAMES[429]=NA_10
CXR_OUTPUT_SPECIES_NAMES[430]=PNH4_1
CXR_OUTPUT_SPECIES_NAMES[431]=PNH4_2
CXR_OUTPUT_SPECIES_NAMES[432]=PNH4_3
CXR_OUTPUT_SPECIES_NAMES[433]=PNH4_4
CXR_OUTPUT_SPECIES_NAMES[434]=PNH4_5
CXR_OUTPUT_SPECIES_NAMES[435]=PNH4_6
CXR_OUTPUT_SPECIES_NAMES[436]=PNH4_7
CXR_OUTPUT_SPECIES_NAMES[437]=PNH4_8
CXR_OUTPUT_SPECIES_NAMES[438]=PNH4_9
CXR_OUTPUT_SPECIES_NAMES[439]=PNH4_10
CXR_OUTPUT_SPECIES_NAMES[440]=PNO3_1
CXR_OUTPUT_SPECIES_NAMES[441]=PNO3_2
CXR_OUTPUT_SPECIES_NAMES[442]=PNO3_3
CXR_OUTPUT_SPECIES_NAMES[443]=PNO3_4
CXR_OUTPUT_SPECIES_NAMES[444]=PNO3_5
CXR_OUTPUT_SPECIES_NAMES[445]=PNO3_6
CXR_OUTPUT_SPECIES_NAMES[446]=PNO3_7
CXR_OUTPUT_SPECIES_NAMES[447]=PNO3_8
CXR_OUTPUT_SPECIES_NAMES[448]=PNO3_9
CXR_OUTPUT_SPECIES_NAMES[449]=PNO3_10
CXR_OUTPUT_SPECIES_NAMES[450]=PSO4_1
CXR_OUTPUT_SPECIES_NAMES[451]=PSO4_2
CXR_OUTPUT_SPECIES_NAMES[452]=PSO4_3
CXR_OUTPUT_SPECIES_NAMES[453]=PSO4_4
CXR_OUTPUT_SPECIES_NAMES[454]=PSO4_5
CXR_OUTPUT_SPECIES_NAMES[455]=PSO4_6
CXR_OUTPUT_SPECIES_NAMES[456]=PSO4_7
CXR_OUTPUT_SPECIES_NAMES[457]=PSO4_8
CXR_OUTPUT_SPECIES_NAMES[458]=PSO4_9
CXR_OUTPUT_SPECIES_NAMES[459]=PSO4_10

# Automatically count # species (subtract 1 for dummy)
CXR_NUMBER_OF_OUTPUT_SPECIES=$(( ${#CXR_OUTPUT_SPECIES_NAMES[@]} - 1 ))

################################################################################
# Probing settings not included here
################################################################################

################################################################################
# Options for extraction of NABEL station data
################################################################################

# We will write a small .pro file with this and
# load it using the @-notation

# The Coordinates are expressed in terms of grid cells
# of the 3rd Grid and needs to be changed if the grid definition changes

# Entry 0 no dummy here!

# unset arrays first
unset CXR_STATION
unset CXR_STATION_X
unset CXR_STATION_Y

CXR_STATION[0]=basel
CXR_STATION_X[0]=44.62
CXR_STATION_Y[0]=73.26

CXR_STATION[1]=bern
CXR_STATION_X[1]=42.15
CXR_STATION_Y[1]=51.21

CXR_STATION[2]=chaumont
CXR_STATION_X[2]=30.34
CXR_STATION_Y[2]=54.34

CXR_STATION[3]=davos
CXR_STATION_X[3]=103.53
CXR_STATION_Y[3]=50.23

CXR_STATION[4]=duebendorf
CXR_STATION_X[4]=70.68
CXR_STATION_Y[4]=69.65

CXR_STATION[5]=haerkingen
CXR_STATION_X[5]=51.02
CXR_STATION_Y[5]=65.10

CXR_STATION[6]=jungfrau
CXR_STATION_X[6]=56.76
CXR_STATION_Y[6]=37.05

CXR_STATION[7]=laegern
CXR_STATION_X[7]=64.28
CXR_STATION_Y[7]=72.05

CXR_STATION[8]=lausanne
CXR_STATION_X[8]=22.55
CXR_STATION_Y[8]=34.43

CXR_STATION[9]=lugano
CXR_STATION_X[9]=82.88
CXR_STATION_Y[9]=18.78

CXR_STATION[10]=magadino
CXR_STATION_X[10]=81.90
CXR_STATION_Y[10]=24.27

CXR_STATION[11]=payerne
CXR_STATION_X[11]=29.85
CXR_STATION_Y[11]=45.54

CXR_STATION[12]=rigi
CXR_STATION_X[12]=67.73
CXR_STATION_Y[12]=57.02

CXR_STATION[13]=sion
CXR_STATION_X[13]=41.00
CXR_STATION_Y[13]=24.05

CXR_STATION[14]=taenikon
CXR_STATION_X[14]=77.78
CXR_STATION_Y[14]=72.99

CXR_STATION[15]=zurich
CXR_STATION_X[15]=68.66
CXR_STATION_Y[15]=68.52

# We count the number (do not change unless you know why)
CXR_NUMBER_OF_STATIONS=${#CXR_STATION[@]}

################################################################################
# Name/Path of the CAMx.in file
################################################################################

# A rule that must be expanded
CXR_MODEL_CTRL_FILE_RULE='${CXR_STATE_DIR}/CAMx.${CXR_DATE_RAW}.in'

################################################################################
# Machine name
################################################################################

CXR_MACHINE=$(uname -n)

################################################################################
# Executables
################################################################################

#Base path to find the CAMx executable is defined in the directory section!

# Lock manager
CXR_LOCK_MAN_EXEC=${CXR_BIN_DIR}/lock.sh

# Fortran-77 Compiler (only needed when installing)
CXR_FORTRAN77_COMPILER_EXEC=$(which pgf77)

# Fortran-90 Compiler (only needed when installing)
CXR_FORTRAN90_COMPILER_EXEC=$(which pgf90)

# This is the default FORTRAN compiler
CXR_FORTRAN_COMPILER_EXEC="$CXR_FORTRAN77_COMPILER_EXEC"

# API GENERATOR

CXR_API_DOC_EXEC=${CXR_BIN_DIR}/generate-api-doc.sh

# wget to download stuff (only needed for installation  - save space)
CXR_WGET_EXEC=$(which wget)


#### It is recommended to compile the binaries
#### into binaries that carry the machine type in their name
#### CAMxRunner -I can do this for you.
#### 
#### Also the function cxr_main_get_binary_name then selects the most appropriate one.
#### replace with literal for your own choice

# The binary to convert bin2asc
CXR_BIN2ASC_EXEC=$(cxr_main_get_binary_name bin2asc)

# The binary to convert asc2bin
CXR_ASC2IBN_EXEC=$(cxr_main_get_binary_name asc2bin)

# The binary to convert Emission ascii to Bin
CXR_AIRCONV_EXEC=$(cxr_main_get_binary_name airconv)

# The binary to convert MM5 Input
CXR_UAMVASCII_EXEC=$(cxr_main_get_binary_name uamvascii)

# Yet another binary to convert MM5 Input
CXR_AIRASCII_EXEC=$(cxr_main_get_binary_name airascii)

# Avgdif
CXR_AVGDIF_EXEC=$(cxr_main_get_binary_name avgdif)

# Splitter for emissions
CXR_SPLIT_EMISSIONS_AREA_EXEC=$(cxr_main_get_binary_name split_emissions_area)

########################################
# Preprocessors
########################################	
CXR_AHOMAP_EXEC=$(cxr_main_get_binary_name ahomap)

CXR_TUV_EXEC=$(cxr_main_get_binary_name tuv)

CXR_AHOMAP_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/ahomap"
CXR_TUV_SRC_DIR="${CXR_BIN_DIR}/${CXR_MODEL}/${CXR_MODEL_VERSION}/src/tuv"


################################################################################
# bin2asc conversion
################################################################################
#No leading dot please
CXR_ASC_EXT=asc


################################################################################
# The OPM and EXEC Settings are machine-dependent.
################################################################################ 
# Are we on a multicore system?
CXR_NUM_CORES=$(cxr_main_count_cores)

# Maximal number of parallel processes in the CAMxRunner
if [[ "$CXR_PARALLEL_PROCESSING" == true  ]]
then
	# By default, use the number of cores
	CXR_MAX_PARALLEL_PROCS=$CXR_NUM_CORES
else
	# Non-Parallel use 1 process
	CXR_MAX_PARALLEL_PROCS=1
fi

# This can be either None, OMP or MPI (MPI is not currently implemented). OMP is recommended.
# the CAMx executable mifust provide this!
CXR_PARALLEL_PARADIGM=None

################################################################################
# OpenMP settings
################################################################################
# Switch on OMP
# If num_cores=1, OMP is turned off

# Number of CPUS
export NCPUS=$CXR_NUM_CORES

# Set number of OpenMP threads (usually equals CPU number)
export OMP_NUM_THREADS=$CXR_NUM_CORES

# Per Thread stack size. Can lead to problems if both to large or too small...
export MPSTKZ=128M

################################################################################
# Determine name of executable.
################################################################################

# If you need another executable name,
# replace this function call by a constant.
# The advantage of the function is that it makes sure the executable is present.
CXR_MODEL_EXEC=$(get_model_exec)



################################################################################
################################################################################
# Settings of modules
################################################################################
################################################################################

# Note that some settings (like binary names) are gathered together in other sections



